[sources.in]
type = "vector"
address = "0.0.0.0:9000"

[sources.node-exporter]
type = "prometheus_scrape"
endpoints = [ "http://localhost:9100/metrics" ]
scrape_interval_secs = 15

[transforms.metrics]
 type = "remap"
 inputs = ["node-exporter"]
 source = '''
   .tags.deployment = "${NORIA_DEPLOYMENT}"
   .tags.job = "readyset-monitor"
'''

[transforms.app_logs]
  type = "remap"
  inputs = ["in"]
  source = '''
    if !exists(.app) {
      if exists(.SYSLOG_IDENTIFIER) {
        .app = .SYSLOG_IDENTIFIER
      } else {
        .app = "systemlogs"
      }
    }
'''

[sinks.out]
inputs = ["in"]
type = "console"
target = "stdout"
encoding.codec = "json"

[sinks.cloudwatch_logs]
type = "aws_cloudwatch_logs"
inputs = ["app_logs"]
create_missing_group = true
create_missing_stream = true
group_name = "${AWS_CLOUDFORMATION_STACK}"
compression = "none"
region = "${AWS_CLOUDFORMATION_REGION}"
stream_name = "{{ app }}"
encoding.codec = "json"

[sinks.cloudwatch_metrics]
type = "aws_cloudwatch_metrics"
inputs = ["in", "metrics"]
default_namespace = "${NORIA_DEPLOYMENT}"
region = "${AWS_CLOUDFORMATION_REGION}"

[sinks.prometheus]
type = "prometheus_exporter"
inputs = ["in", "metrics"]
address = "0.0.0.0:9090"
