AWSTemplateFormatVersion: "2010-09-09"

Description: ReadySet MySQL Cluster

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: VPC Network Configuration
        Parameters:
          - VPCID
          - PrivateSubnet1ID
          - PrivateSubnet2ID
          - PrivateSubnet3ID
          - ReadySetServerSecurityGroupID
          - ReadySetAdapterSecurityGroupID
          - ReadySetMonitoringSecurityGroupID
      - Label:
          default: SSH Access Configuration
        Parameters:
          - KeyPairName
      - Label:
          default: Consul Configuration
        Parameters:
          - ConsulJoinManagedPolicyArn
          - ConsulEc2RetryJoinTagKey
          - ConsulEc2RetryJoinTagValue
      - Label:
          default: ReadySet Configuration
        Parameters:
          - ReadySetAdapterInstanceType
          - ReadySetAdapterNodes
          - ReadySetServerInstanceType
          - ReadySetServerNodes
          - ReadySetMonitorInstanceType
          - ReadySetServerVolumeSizeGB
          - ReadySetMemoryLimitGB
          - ReadySetDeploymentName
          - MySQLDatabaseURL
          - ReadySetMySQLAdapterUsername
          - ReadySetMySQLAdapterPassword

Parameters:
  ReadySetAdapterInstanceType:
    Description: The EC2 instance type to use for ReadySet Adapter instances.
    Type: String
    Default: m5.large
    AllowedPattern: ^(\w)5.*
    ConstraintDescription: Instance type must be 5th generation

  ReadySetServerInstanceType:
    Description: The EC2 instance type to use for ReadySet Server instances.
    Type: String
    Default: c5.4xlarge
    AllowedPattern: ^(\w)5.*
    ConstraintDescription: Instance type must be 5th generation

  ReadySetMonitorInstanceType:
    Description: The EC2 instance type to use for the ReadySet monitoring instance.
    Type: String
    Default: c5.large
    AllowedPattern: ^(\w)5.*
    ConstraintDescription: Instance type must be 5th generation

  ReadySetAdapterNodes:
    Description: Number of Adapter nodes to create.
    Type: String
    Default: 3
    AllowedPattern: ^\d+$

  ReadySetServerNodes:
    Description: Number of Server nodes to create.
    Type: String
    Default: 3
    AllowedPattern: ^\d+$

  ReadySetServerSecurityGroupID:
    Description: ID of the security group to apply to ReadySet Server instances.
    Type: AWS::EC2::SecurityGroup::Id

  ReadySetAdapterSecurityGroupID:
    Description: ID of the security group to apply to ReadySet Adapter instances.
    Type: AWS::EC2::SecurityGroup::Id

  ReadySetMonitoringSecurityGroupID:
    Description: ID of the security group to apply to ReadySet Monitoring instances.
    Type: AWS::EC2::SecurityGroup::Id

  ReadySetServerVolumeSizeGB:
    Description: Volume size, in gigabytes, to provision for Server instances.
    Type: Number
    Default: 32
    MinValue: 32

  ReadySetMemoryLimitGB:
    Description: Memory limit for readyset server instances, in gigabytes. This should generally be set to around 80% of the memory available on the instance. A memory limit of 0 (the default) disables eviction entirely.
    Type: Number
    Default: 0
    MinValue: 0

  ReadySetDeploymentName:
    Description: A unique name for the ReadySet deployment. This is used to differentiate multiple ReadySet deployments with the same Consul cluster
    Type: String
    MinLength: 1
    AllowedPattern: ^[^/ ]+$
    ConstraintDescription: Must be non-empty and cannot contain slashes ("/") or spaces

  KeyPairName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.

  PrivateSubnet1ID:
    Type: AWS::EC2::Subnet::Id

  PrivateSubnet2ID:
    Type: AWS::EC2::Subnet::Id

  PrivateSubnet3ID:
    Type: AWS::EC2::Subnet::Id

  VPCID:
    Description: VPC ID
    Type: AWS::EC2::VPC::Id

  ConsulJoinManagedPolicyArn:
    Description: ARN of an managed IAM policy that the permissions to find Consul Servers
    Type: String

  ConsulEc2RetryJoinTagKey:
    Description: The EC2 instance tag key to filter on when joining to other Consul nodes.
    Type: String
    Default: ReadysetConsulNodeType
    ConstraintDescription: Must match EC2 Tag Name requirements.

  ConsulEc2RetryJoinTagValue:
    Description: The EC2 instance tag value to filter on when joining to other Consul nodes.
    Type: String
    Default: Server
    ConstraintDescription: Must match EC2 Tag Value requirements.

  MySQLDatabaseURL:
    Description: Existing Database URL connection string, e.g. mysql://username:password@localhost:3306/mydatabase
    Type: String
    NoEcho: True

  ReadySetMySQLAdapterUsername:
    Description: Username to use to authenticate to the readyset adapter
    Type: String

  ReadySetMySQLAdapterPassword:
    Description: Password to use to authenticate to the readyset adapter
    Type: String
    NoEcho: true

# Update this with the latest AMI

Mappings:
  AWSAMIRegionMap:
    us-east-2:
      # short commit id associated with AMIs: 9f9c954
      READYSETMYSQLADAPTER: ami-06804f129cd35b2f0
      READYSETSERVER: ami-0f9d500a6eb0391e1
      READYSETMONITOR: ami-059cccfe54b7b4d06

Resources:
  # --- START MYSQL ADAPTER --- #

  ReadySetMySQLAdapterRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - !Ref ConsulJoinManagedPolicyArn
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Principal:
              Service: ec2.amazonaws.com
            Effect: Allow
            Sid: ""

  ReadySetMySQLAdapterProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref ReadySetMySQLAdapterRole

  ReadySetMySQLAdapterTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckProtocol: HTTP
      HealthCheckPath: /health
      HealthCheckPort: 6034
      Port: 3306
      Protocol: TCP
      VpcId: !Ref VPCID

  ReadySetMySQLAdapterLC:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      InstanceType: !Ref ReadySetAdapterInstanceType
      AssociatePublicIpAddress: false
      EbsOptimized: true
      SecurityGroups:
        - !Ref ReadySetAdapterSecurityGroupID
      KeyName: !Ref KeyPairName
      ImageId: !FindInMap
        - AWSAMIRegionMap
        - !Ref "AWS::Region"
        - READYSETMYSQLADAPTER
      IamInstanceProfile: !Ref ReadySetMySQLAdapterProfile
      UserData: !Base64
        Fn::Sub:
          - |
            Content-Type: multipart/mixed; boundary="==BOUNDARY=="
            MIME-Version: 1.0
            --==BOUNDARY==
            Content-Type: text/x-shellscript; charset="us-ascii"
            #!/bin/bash -v
            set -eu -o pipefail
            export AWS_CLOUDFORMATION_STACK="${AWS::StackName}"
            export AWS_CLOUDFORMATION_RESOURCE="ReadySetMySQLAdapterASG"
            export AWS_CLOUDFORMATION_REGION="${AWS::Region}"
            export CONSUL_TAG_KEY="${ConsulEc2RetryJoinTagKey}"
            export CONSUL_TAG_VALUE="${ConsulEc2RetryJoinTagValue}"
            export UPSTREAM_DB_URL="${MySQLDatabaseURL}"
            export DEPLOYMENT="${ReadySetDeploymentName}"
            export USERNAME="${ReadySetMySQLAdapterUsername}"
            export PASSWORD="${ReadySetMySQLAdapterPassword}"
            exec /usr/local/bin/user-data-init.sh
            --==BOUNDARY==
          - {}

  ReadySetMySQLAdapterASG:
    CreationPolicy:
      ResourceSignal:
        Count: !Ref ReadySetAdapterNodes
        Timeout: PT20M
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref ReadySetMySQLAdapterLC
      MaxSize: !Ref ReadySetAdapterNodes
      MinSize: !Ref ReadySetAdapterNodes
      TargetGroupARNs:
        - !Ref ReadySetMySQLAdapterTargetGroup
      VPCZoneIdentifier:
        - !Ref PrivateSubnet1ID
        - !Ref PrivateSubnet2ID
        - !Ref PrivateSubnet3ID
      Tags:
        - Key: Name
          Value: !Join ['-', [!Ref "AWS::StackName", Readyset-MySQLAdapter]]
          PropagateAtLaunch: true

  ReadySetMySQLAdapterNLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: network
      Scheme: internal
      Subnets:
        - !Ref PrivateSubnet1ID
        - !Ref PrivateSubnet2ID
        - !Ref PrivateSubnet3ID

  ReadySetMySQLAdapterListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Protocol: TCP
      Port: 3306
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ReadySetMySQLAdapterTargetGroup
      LoadBalancerArn: !Ref ReadySetMySQLAdapterNLB

  ReadySetMySQLAdapterVPCEndpointService:
    Type: AWS::EC2::VPCEndpointService
    Properties:
      NetworkLoadBalancerArns:
        - !Ref ReadySetMySQLAdapterNLB

  # --- END MYSQL ADAPTER --- #


  # --- START SERVER --- #

  ReadySetServerASGLifecycleTerminateSQS:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 0

  ReadySetServerASGRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AutoScalingNotificationAccessRole
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Principal:
              Service: autoscaling.amazonaws.com
            Effect: Allow
            Sid: ""

  ReadySetServerRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - !Ref ConsulJoinManagedPolicyArn
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Principal:
              Service: ec2.amazonaws.com
            Effect: Allow
            Sid: ""
      Policies:
        - PolicyName: ReadySetServerEBSVolumePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:CreateVolume
                  - ec2:DescribeVolumes
                  - ec2:CreateTags
                Resource: '*'
              - Effect: Allow
                Action:
                  - ec2:AttachVolume
                  - ec2:DetachVolume
                Resource:
                  - arn:aws:ec2:*:*:volume/*
                Condition:
                  "Null":
                    aws:ResourceTag/ReadySet:ServerVolume: "false"
              - Effect: Allow
                Action:
                  - ec2:AttachVolume
                  - ec2:DetachVolume
                  - ec2:TerminateInstances
                Resource:
                  - arn:aws:ec2:*:*:instance/*
                Condition:
                  "Null":
                    aws:ResourceTag/ReadySet:ServerInstance: "false"
              - Effect: Allow
                Action:
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                Resource:
                  - !GetAtt ReadySetServerASGLifecycleTerminateSQS.Arn
              - Effect: Allow
                Action:
                  - autoscaling:CompleteLifecycleAction
                Resource: '*'

  ReadySetServerProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref ReadySetServerRole

  ReadySetServerLC:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      InstanceType: !Ref ReadySetServerInstanceType
      EbsOptimized: true
      AssociatePublicIpAddress: false
      SecurityGroups:
        - !Ref ReadySetServerSecurityGroupID
      KeyName: !Ref KeyPairName
      ImageId: !FindInMap
        - AWSAMIRegionMap
        - !Ref "AWS::Region"
        - READYSETSERVER
      IamInstanceProfile: !Ref ReadySetServerProfile
      UserData: !Base64
        Fn::Sub:
          - |
            Content-Type: multipart/mixed; boundary="==BOUNDARY=="
            MIME-Version: 1.0
            --==BOUNDARY==
            Content-Type: text/x-shellscript; charset="us-ascii"
            #!/bin/bash -v
            set -eu -o pipefail
            export AWS_CLOUDFORMATION_STACK="${AWS::StackName}"
            export AWS_CLOUDFORMATION_RESOURCE="ReadySetServerASG"
            export AWS_CLOUDFORMATION_REGION="${AWS::Region}"
            export SQS_QUEUE_URL="${SqsQueueUrl}"
            export CONSUL_TAG_KEY="${ConsulEc2RetryJoinTagKey}"
            export CONSUL_TAG_VALUE="${ConsulEc2RetryJoinTagValue}"
            export DEPLOYMENT="${ReadySetDeploymentName}"
            export NORIA_MEMORY_LIMIT_GB="${ReadySetMemoryLimitGB}"
            export NORIA_PRIMARY_REGION="${AWS::Region}"
            export NORIA_QUORUM="${ReadySetServerNodes}"
            export NORIA_REGION="${AWS::Region}"
            export NORIA_SHARDS="0"
            export REPLICATION_URL="${MySQLDatabaseURL}"
            export VOLUME_SIZE_GB="${ReadySetServerVolumeSizeGB}"
            exec /usr/local/bin/user-data-init.sh
            --==BOUNDARY==
          - SqsQueueUrl: !Ref ReadySetServerASGLifecycleTerminateSQS

  ReadySetServerASG:
    CreationPolicy:
      ResourceSignal:
        Count: !Ref ReadySetServerNodes
        Timeout: PT20M
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref ReadySetServerLC
      MaxSize: !Ref ReadySetServerNodes
      MinSize: !Ref ReadySetServerNodes
      VPCZoneIdentifier:
        - !Ref PrivateSubnet1ID
        - !Ref PrivateSubnet2ID
        - !Ref PrivateSubnet3ID
      LifecycleHookSpecificationList:
        - LifecycleHookName: ReadySetServerASGTerminateSNS
          LifecycleTransition: autoscaling:EC2_INSTANCE_TERMINATING
          HeartbeatTimeout: 1800
          NotificationTargetARN: !GetAtt ReadySetServerASGLifecycleTerminateSQS.Arn
          RoleARN: !GetAtt ReadySetServerASGRole.Arn
      Tags:
        - Key: Name
          Value: !Join ['-', [!Ref "AWS::StackName", ReadySet-Server]]
          PropagateAtLaunch: true
        - Key: ReadySet:ServerInstance
          Value: !Ref ReadySetDeploymentName
          PropagateAtLaunch: true

  # --- END SERVER --- #


  # --- START LOGS AGGREGATOR --- #

  ReadySetAggregatorCloudWatchLogsManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:DescribeLogGroups
              - logs:DescribeLogStreams
              - logs:CreateLogGroup
              - logs:PutLogEvents
              - cloudwatch:PutMetricData
            Resource: '*'

  ReadySetMonitorRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - !Ref ConsulJoinManagedPolicyArn
        - !Ref ReadySetAggregatorCloudWatchLogsManagedPolicy
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Principal:
              Service: ec2.amazonaws.com
            Effect: Allow
            Sid: ""

  ReadySetMonitorProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref ReadySetMonitorRole

  ReadySetMonitorInstance:
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT20M
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref ReadySetMonitorInstanceType
      SubnetId: !Ref PrivateSubnet1ID
      SecurityGroupIds:
        - !Ref ReadySetMonitoringSecurityGroupID
      KeyName: !Ref KeyPairName
      ImageId: !FindInMap
        - AWSAMIRegionMap
        - !Ref "AWS::Region"
        - READYSETMONITOR
      Tags:
        - Key: Name
          Value: !Join ['-', [!Ref "AWS::StackName", Monitor]]
      IamInstanceProfile: !Ref ReadySetMonitorProfile
      UserData: !Base64
        Fn::Sub:
          - |
            Content-Type: multipart/mixed; boundary="==BOUNDARY=="
            MIME-Version: 1.0
            --==BOUNDARY==
            Content-Type: text/x-shellscript; charset="us-ascii"
            #!/bin/bash -v
            set -eu -o pipefail
            export AWS_CLOUDFORMATION_STACK="${AWS::StackName}"
            export AWS_CLOUDFORMATION_RESOURCE="ReadySetMonitorInstance"
            export AWS_CLOUDFORMATION_REGION="${AWS::Region}"
            export CONSUL_TAG_KEY="${ConsulEc2RetryJoinTagKey}"
            export CONSUL_TAG_VALUE="${ConsulEc2RetryJoinTagValue}"
            export DEPLOYMENT="${ReadySetDeploymentName}"
            exec /usr/local/bin/user-data-init.sh
            --==BOUNDARY==
          - {}
          # --- END LOGS AGGREGATOR --- #

Outputs:
  ReadySetAdapterNLBDNSName:
    Description: Host for ReadySet connection string.
    Value: !GetAtt ReadySetMySQLAdapterNLB.DNSName

  ReadySetMySQLVPCEndpointService:
    Description: VPC Endpoint Service to allow connections from outside the VPC.
    Value: !Ref ReadySetMySQLAdapterVPCEndpointService
