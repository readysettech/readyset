---
AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  AvailabilityZones:
    Description: >-
      List of Availability Zones to use for the subnets in the VPC.
      Note: The logical order is preserved. Requires 3.
    Type: 'List<AWS::EC2::AvailabilityZone::Name>'
  QSS3BucketName:
    AllowedPattern: '^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$'
    ConstraintDescription: >-
      Quick Start bucket name can include numbers, lowercase letters, uppercase
      letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Default: aws-quickstart
    Description: >-
      S3 bucket name for the Quick Start assets. Quick Start bucket name can
      include numbers, lowercase letters, uppercase letters, and hyphens (-). It
      cannot start or end with a hyphen (-).
    Type: String
  ReadysetS3BucketName:
    AllowedPattern: '^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$'
    ConstraintDescription: >-
      Readyset bucket name can include numbers, lowercase letters, uppercase
      letters, and hyphens (-). It cannot start or end with a hyphen (-).
    # Default: tbd
    Description: >-
      S3 bucket name for the Readyset assets. Readyset bucket name can
      include numbers, lowercase letters, uppercase letters, and hyphens (-). It
      cannot start or end with a hyphen (-).
    Type: String
  PrivateSubnet1CIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Default: 10.0.0.0/19
    Description: CIDR block for private subnet 1 located in Availability Zone 1.
    Type: String
  PrivateSubnet2CIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Default: 10.0.32.0/19
    Description: CIDR block for private subnet 2 located in Availability Zone 2.
    Type: String
  PrivateSubnet3CIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Default: 10.0.64.0/19
    Description: CIDR block for private subnet 3 located in Availability Zone 3.
    Type: String
  PublicSubnet1CIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Default: 10.0.128.0/20
    Description: CIDR block for the public DMZ subnet 1 located in Availability Zone 1
    Type: String
  PublicSubnet2CIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Default: 10.0.144.0/20
    Description: CIDR block for the public DMZ subnet 2 located in Availability Zone 2
    Type: String
  PublicSubnet3CIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Default: 10.0.160.0/20
    Description: CIDR block for the public DMZ subnet 3 located in Availability Zone 3
    Type: String
  VPCCIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Default: 10.0.0.0/16
    Description: CIDR block for the VPC
    Type: String
  KeyPairName:
    Description: >-
      Public/private key pairs allow you to securely connect to your instance
      after it launches
    Type: 'AWS::EC2::KeyPair::KeyName'
  AccessCIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: >-
      The CIDR IP range that is permitted to access Readyset. Note: a value of
      0.0.0.0/0 will allow access from ANY IP address
    Type: String
  ReadysetAdapterInstanceType:
    Type: String
    Description: The EC2 instance type to use for adapter instances.
    Default: t3.small
  ReadysetAdapterNodes:
    Type: String
    Description: Number of adapter nodes to create
    Default: 3
  ReadysetServerInstanceType:
    Type: String
    Description: The EC2 instance type to use for server instances.
    Default: t3.small
  ReadysetServerNodes:
    Type: String
    Description: Number of server nodes to create
    Default: 3
  DatabaseStorageType:
    Description: Database storage type
    Type: String
    Default: gp2
  DatabaseInstanceClass:
    Description: Database instance class
    Type: String
    Default: db.m5.large
  DatabaseAllocatedStorage:
    Description: The size of the database (GiB)
    Type: Number
    MinValue: 20
    MaxValue: 65536
    Default: 20
  DatabaseName:
    Description: Database name
    Type: String
    MinLength: 1
    MaxLength: 64
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: Must begin with a letter and contain only alphanumeric characters.
  DatabaseUsername:
    Description: Username to log into the MySQL Database
    Type: String
    MinLength: 1
    MaxLength: 16
  DatabasePassword:
    Type: String
    NoEcho: true
    Description: Password to log into the MySQL Database
    MinLength: 8
    MaxLength: 41
  DeploymentName:
    Type: String
    Default: ""
    # TODO: Allowed Pattern
Resources:
  VPCStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: !Sub >-
        https://${QSS3BucketName}.s3.amazonaws.com/quickstart-aws-vpc/templates/aws-vpc.template.yaml
      Parameters:
        AvailabilityZones: !Join
          - ','
          - !Ref AvailabilityZones
        NumberOfAZs: '3'
        PrivateSubnet1ACIDR: !Ref PrivateSubnet1CIDR
        PrivateSubnet2ACIDR: !Ref PrivateSubnet2CIDR
        PrivateSubnet3ACIDR: !Ref PrivateSubnet3CIDR
        PublicSubnet1CIDR: !Ref PublicSubnet1CIDR
        PublicSubnet2CIDR: !Ref PublicSubnet2CIDR
        PublicSubnet3CIDR: !Ref PublicSubnet3CIDR
        VPCCIDR: !Ref VPCCIDR
  BastionStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: !Sub >-
        https://${QSS3BucketName}.s3.amazonaws.com/quickstart-linux-bastion/templates/linux-bastion.template
      Parameters:
        BastionAMIOS: Ubuntu-Server-20.04-LTS-HVM
        BastionInstanceType: 't3.medium'
        KeyPairName: !Ref KeyPairName
        PublicSubnet1ID: !GetAtt
          - VPCStack
          - Outputs.PublicSubnet1ID
        PublicSubnet2ID: !GetAtt
          - VPCStack
          - Outputs.PublicSubnet2ID
        RemoteAccessCIDR: !Ref AccessCIDR
        VPCID: !GetAtt
          - VPCStack
          - Outputs.VPCID
  ReadysetConsulStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: !Sub >-
        https://${ReadysetS3BucketName}.s3.amazonaws.com/readyset/templates/readyset-authority-consul-template.yaml
      Parameters:
        BastionSecurityGroupID: !GetAtt
          - BastionStack
          - Outputs.BastionSecurityGroupID
        KeyPairName: !Ref KeyPairName
        PrivateSubnet1ID: !GetAtt
          - VPCStack
          - Outputs.PrivateSubnet1AID
        PrivateSubnet2ID: !GetAtt
          - VPCStack
          - Outputs.PrivateSubnet2AID
        PrivateSubnet3ID: !GetAtt
          - VPCStack
          - Outputs.PrivateSubnet3AID
        VPCID: !GetAtt
          - VPCStack
          - Outputs.VPCID
        VPCCIDR: !Ref VPCCIDR
  ReadysetRDSMySQLStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: !Sub >-
        https://${ReadysetS3BucketName}.s3.amazonaws.com/readyset/templates/readyset-rds-mysql-template.yaml
      Parameters:
        PrivateSubnet1ID: !GetAtt
          - VPCStack
          - Outputs.PrivateSubnet1AID
        PrivateSubnet2ID: !GetAtt
          - VPCStack
          - Outputs.PrivateSubnet2AID
        PrivateSubnet3ID: !GetAtt
          - VPCStack
          - Outputs.PrivateSubnet3AID
        VPCID: !GetAtt
          - VPCStack
          - Outputs.VPCID
        VPCCIDR: !Ref VPCCIDR
        DatabaseStorageType: !Ref DatabaseStorageType
        DatabaseInstanceClass: !Ref DatabaseInstanceClass
        DatabaseAllocatedStorage: !Ref DatabaseAllocatedStorage
        DatabaseName: !Ref DatabaseName
        DatabaseUsername: !Ref DatabaseUsername
        DatabasePassword: !Ref DatabasePassword
  ReadysetMySQLStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: !Sub >-
        https://${ReadysetS3BucketName}.s3.amazonaws.com/readyset/templates/readyset-mysql-template.yaml
      Parameters:
        BastionSecurityGroupID: !GetAtt
          - BastionStack
          - Outputs.BastionSecurityGroupID
        ConsulJoinManagedPolicyArn: !GetAtt
          - ReadysetConsulStack
          - Outputs.ConsulJoinManagedPolicyArn
        PrivateSubnet1ID: !GetAtt
          - VPCStack
          - Outputs.PrivateSubnet1AID
        PrivateSubnet2ID: !GetAtt
          - VPCStack
          - Outputs.PrivateSubnet2AID
        PrivateSubnet3ID: !GetAtt
          - VPCStack
          - Outputs.PrivateSubnet3AID
        VPCID: !GetAtt
          - VPCStack
          - Outputs.VPCID
        VPCCIDR: !Ref VPCCIDR
        KeyPairName: !Ref KeyPairName
        MySQLDatabaseURL: !GetAtt
          - ReadysetRDSMySQLStack
          - Outputs.DatabaseURL
        ReadysetAdapterInstanceType: !Ref ReadysetAdapterInstanceType
        ReadysetAdapterNodes: !Ref ReadysetAdapterNodes
        ReadysetServerInstanceType: !Ref ReadysetServerInstanceType
        ReadysetServerNodes: !Ref ReadysetServerNodes
        DeploymentName: !Ref DeploymentName
Outputs:
  ReadysetDBSecurityGroup:
    Value: !GetAtt
      - ReadysetMySQLStack
      - Outputs.ReadysetDBSecurityGroup
    Description: Security group for the RDS instance
  ReadysetMySQLVPCEndpoint:
    Value: !GetAtt
      - ReadysetMySQLStack
      - Outputs.ReadysetMySQLVPCEndpoint
    Description: VPC Endpoint to connect to to access Readyset
