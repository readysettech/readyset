AWSTemplateFormatVersion: "2010-09-09"

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: VPC Network Configuration
        Parameters:
          - PrivateSubnet1ID
          - PrivateSubnet2ID
          - PrivateSubnet3ID
          - ConsulServerSecurityGroupID
      - Label:
          default: SSH Access Configuration
        Parameters:
          - KeyPairName
      - Label:
          default: Consul Configuration
        Parameters:
          - ConsulEc2RetryJoinTagKey
          - ConsulEc2RetryJoinTagValue
          - ConsulServerNodes

Parameters:
  # Consul Server

  ConsulInstanceType:
    Description: The EC2 instance type for the Consul instances.
    Type: String
    Default: m5.large
    ConstraintDescription: Choose an instance type.

  ConsulEc2RetryJoinTagKey:
    Description: The EC2 instance tag key to filter on when joining to other Consul nodes.
    Type: String
    Default: ReadysetConsulNodeType
    ConstraintDescription: Must match EC2 Tag Name requirements.

  ConsulEc2RetryJoinTagValue:
    Description: The EC2 instance tag value to filter on when joining to other Consul nodes.
    Type: String
    Default: Server
    ConstraintDescription: Must match EC2 Tag Name requirements.

  ConsulServerNodes:
    Description: The number of Consul server nodes that will be created. You can choose 3, 5, or 7 nodes.
    Type: String
    AllowedValues:
      - "3"
      - "5"
      - "7"
    Default: "3"

  ConsulServerSecurityGroupID:
    Description: ID of the security group to apply to ReadySet Consul Server instances.
    Type: AWS::EC2::SecurityGroup::Id

  # SSH

  KeyPairName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.

  # Networking

  PrivateSubnet1ID:
    Description: ID of the private subnet 1 in Availability Zone 1 (e.g., subnet-xxxxxxxx)
    Type: AWS::EC2::Subnet::Id

  PrivateSubnet2ID:
    Description: ID of the private subnet 2 in Availability Zone 2 (e.g., subnet-xxxxxxxx)
    Type: AWS::EC2::Subnet::Id

  PrivateSubnet3ID:
    Description: ID of the private subnet 3 in Availability Zone 3 (e.g., subnet-xxxxxxxx)
    Type: AWS::EC2::Subnet::Id

# Update this with the latest AMI

Mappings:
  AWSAMIRegionMap:
    us-east-2:
      READYSETAUTHORITYCONSUL: ami-0bc5a6a247c2a5455

Resources:
  ConsulJoinManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - ec2:DescribeInstances
              - ec2:DescribeTags
              - autoscaling:DescribeAutoScalingGroups
            Resource: '*'

  ConsulServerRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - !Ref ConsulJoinManagedPolicy
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Principal:
              Service: ec2.amazonaws.com
            Effect: Allow
            Sid: ""

  ConsulServerProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref ConsulServerRole

  ConsulServerLC:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      InstanceType: !Ref ConsulInstanceType
      AssociatePublicIpAddress: false
      SecurityGroups:
        - !Ref ConsulServerSecurityGroupID
      KeyName: !Ref KeyPairName
      ImageId: !FindInMap
        - AWSAMIRegionMap
        - !Ref "AWS::Region"
        - READYSETAUTHORITYCONSUL
      IamInstanceProfile: !Ref ConsulServerProfile
      UserData: !Base64
        Fn::Sub:
          - |
            Content-Type: multipart/mixed; boundary="==BOUNDARY=="
            MIME-Version: 1.0
            --==BOUNDARY==
            Content-Type: text/x-shellscript; charset="us-ascii"
            #!/bin/bash -v
            set -eu -o pipefail
            export AWS_CLOUDFORMATION_STACK="${AWS::StackName}"
            export AWS_CLOUDFORMATION_RESOURCE="ConsulServerASG"
            export AWS_CLOUDFORMATION_REGION="${AWS::Region}"
            export CONSUL_TAG_KEY="${ConsulEc2RetryJoinTagKey}"
            export CONSUL_TAG_VALUE="${ConsulEc2RetryJoinTagValue}"
            export CONSUL_BOOTSTRAP_EXPECT="${ConsulServerNodes}"
            exec /usr/local/bin/user-data-init.sh
            --==BOUNDARY==
          - {}

  ConsulServerASG:
    CreationPolicy:
      ResourceSignal:
        Count: !Ref ConsulServerNodes
        Timeout: PT20M
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: 1
        MaxBatchSize: 1
        WaitOnResourceSignals: true
        PauseTime: PT20M
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref ConsulServerLC
      MinSize: !Ref ConsulServerNodes
      MaxSize: !Ref ConsulServerNodes
      DesiredCapacity: !Ref ConsulServerNodes
      VPCZoneIdentifier:
        - !Ref PrivateSubnet1ID
        - !Ref PrivateSubnet2ID
        - !Ref PrivateSubnet3ID
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref "AWS::StackName"
              - ConsulServer
          PropagateAtLaunch: true
        - Key: !Ref ConsulEc2RetryJoinTagKey
          Value: !Ref ConsulEc2RetryJoinTagValue
          PropagateAtLaunch: true

Outputs:
  ConsulJoinManagedPolicyArn:
    Description: IAM Policy that allows an instance to find the Consul server nodes.
    Value: !Ref ConsulJoinManagedPolicy

  ConsulEc2RetryJoinTagKey:
    Description: The EC2 instance tag key to filter on when joining to other Consul nodes.
    Value: !Ref ConsulEc2RetryJoinTagKey

  ConsulEc2RetryJoinTagValue:
    Description: The EC2 instance tag value to filter on when joining to other Consul nodes.
    Value: !Ref ConsulEc2RetryJoinTagValue
