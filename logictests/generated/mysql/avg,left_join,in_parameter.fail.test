# Generated by:
#     target/debug/noria-logictest permute -d 3 -o logictests/generated/mysql --only in_parameter --compare-to mysql://root:noria@localhost/mysql --subquery-depth 1 --rows-per-table 5 --include-deletes --overwrite-tests

statement ok
CREATE TABLE table_3 (column_4 INT, column_3 INT, column_2 INT, column_5 INT, column_1 INT, PRIMARY KEY (column_5))


statement ok
CREATE TABLE table_4 (column_1 INT, column_2 INT, column_3 INT, PRIMARY KEY (column_3))


statement ok
CREATE TABLE table_1 (column_2 INT, column_6 INT, column_4 INT, column_3 INT, column_1 INT, column_5 INT, column_7 INT, PRIMARY KEY (column_7))


statement ok
CREATE TABLE table_2 (column_2 INT, column_3 INT, column_1 INT, PRIMARY KEY (column_3))


statement ok
CREATE TABLE table_5 (column_1 INT, column_2 INT, column_3 INT, PRIMARY KEY (column_3))


statement ok
INSERT INTO table_3 (column_4, column_3, column_2, column_5, column_1) VALUES (1, 1, 1, 0, 1), (1, 1, 1, 1, 1), (2, 1, 1, 2, 1), (1, 1, 1, 3, 1), (0, 1, 1, 4, 1)


statement ok
INSERT INTO table_4 (column_1, column_2, column_3) VALUES (1, 1, 0), (1, 1, 1), (1, 1, 2), (1, 1, 3), (1, 1, 4)


statement ok
INSERT INTO table_1 (column_2, column_6, column_4, column_3, column_1, column_5, column_7) VALUES (1, 1, 1, 1, 2, 1, 0), (1, 1, 1, 1, 1, 1, 1), (0, 1, 1, 1, 1, 1, 2), (1, 1, 1, 1, 1, 1, 3), (2, 1, 1, 1, 0, 1, 4)


statement ok
INSERT INTO table_2 (column_2, column_3, column_1) VALUES (1, 0, 1), (1, 1, 1), (1, 2, 1), (1, 3, 1), (1, 4, 1)


statement ok
INSERT INTO table_5 (column_1, column_2, column_3) VALUES (1, 1, 0), (1, 1, 1), (1, 1, 2), (1, 1, 3), (1, 1, 4)


query  rowsort
SELECT avg(table_1.column_1) AS alias_1 FROM table_1
----
1.0000

query  rowsort
SELECT table_1.column_2 AS alias_1, table_2.column_2 AS alias_2 FROM table_1 LEFT JOIN table_2 ON (table_1.column_1 = table_2.column_1)
----
34 values hashing to 3a0090ceff7dead3cb1a2c5f25520714

query  rowsort
SELECT table_1.column_1 AS alias_1 FROM table_1 WHERE table_1.column_1 IN (?, ?, ?)
? = 0
? = 1
? = 2
----
0
1
1
1
2

query  rowsort
SELECT avg(table_1.column_3) AS alias_1, table_1.column_4 AS alias_2, table_3.column_2 AS alias_3 FROM table_1 LEFT JOIN table_3 ON (table_1.column_3 = table_3.column_1) GROUP BY table_1.column_4, table_3.column_2
----
1.0000
1
1

query  rowsort
SELECT avg(table_1.column_5) AS alias_1 FROM table_1 WHERE table_1.column_2 IN (?, ?, ?)
? = 0
? = 1
? = 2
----
1.0000

query  rowsort
SELECT table_1.column_6 AS alias_1, table_4.column_2 AS alias_2 FROM table_1 LEFT JOIN table_4 ON (table_1.column_2 = table_4.column_1) WHERE table_1.column_2 IN (?, ?, ?)
? = 0
? = 1
? = 2
----
34 values hashing to 72bba62bffd79ee7011a1c8102fad32b

query  rowsort
SELECT avg(table_3.column_3) AS alias_1, table_3.column_4 AS alias_2, table_5.column_2 AS alias_3 FROM table_3 LEFT JOIN table_5 ON (table_3.column_3 = table_5.column_1) WHERE table_3.column_4 IN (?, ?, ?) GROUP BY table_3.column_4, table_5.column_2
? = 0
? = 1
? = 2
----
1.0000
0
1
1.0000
1
1
1.0000
2
1

statement ok
DELETE FROM table_3 WHERE (column_5 = 0)


statement ok
DELETE FROM table_3 WHERE (column_5 = 1)


statement ok
DELETE FROM table_4 WHERE (column_3 = 0)


statement ok
DELETE FROM table_4 WHERE (column_3 = 1)


statement ok
DELETE FROM table_1 WHERE (column_7 = 0)


statement ok
DELETE FROM table_1 WHERE (column_7 = 1)


statement ok
DELETE FROM table_2 WHERE (column_3 = 0)


statement ok
DELETE FROM table_2 WHERE (column_3 = 1)


statement ok
DELETE FROM table_5 WHERE (column_3 = 0)


statement ok
DELETE FROM table_5 WHERE (column_3 = 1)


query  rowsort
SELECT avg(table_1.column_1) AS alias_1 FROM table_1
----
0.6667

query  rowsort
SELECT table_1.column_2 AS alias_1, table_2.column_2 AS alias_2 FROM table_1 LEFT JOIN table_2 ON (table_1.column_1 = table_2.column_1)
----
0
1
0
1
0
1
1
1
1
1
1
1
2
NULL

query  rowsort
SELECT table_1.column_1 AS alias_1 FROM table_1 WHERE table_1.column_1 IN (?, ?, ?)
? = 0
? = 1
? = 2
----
0
1
1

query  rowsort
SELECT avg(table_1.column_3) AS alias_1, table_1.column_4 AS alias_2, table_3.column_2 AS alias_3 FROM table_1 LEFT JOIN table_3 ON (table_1.column_3 = table_3.column_1) GROUP BY table_1.column_4, table_3.column_2
----
1.0000
1
1

query  rowsort
SELECT avg(table_1.column_5) AS alias_1 FROM table_1 WHERE table_1.column_2 IN (?, ?, ?)
? = 0
? = 1
? = 2
----
1.0000

query  rowsort
SELECT table_1.column_6 AS alias_1, table_4.column_2 AS alias_2 FROM table_1 LEFT JOIN table_4 ON (table_1.column_2 = table_4.column_1) WHERE table_1.column_2 IN (?, ?, ?)
? = 0
? = 1
? = 2
----
1
1
1
1
1
1
1
NULL
1
NULL

query  rowsort
SELECT avg(table_3.column_3) AS alias_1, table_3.column_4 AS alias_2, table_5.column_2 AS alias_3 FROM table_3 LEFT JOIN table_5 ON (table_3.column_3 = table_5.column_1) WHERE table_3.column_4 IN (?, ?, ?) GROUP BY table_3.column_4, table_5.column_2
? = 0
? = 1
? = 2
----
1.0000
0
1
1.0000
1
1
1.0000
2
1
