version: "3.8"
services:
  consul:
    image: 305232526136.dkr.ecr.us-east-2.amazonaws.com/mirror/consul
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "8500"]
      interval: 10s
      timeout: 2s
      retries: 5
      start_period: 5s
  mysql:
    image: 305232526136.dkr.ecr.us-east-2.amazonaws.com/mirror/mysql:8.0
    cap_add:
      - SYS_NICE #CAP_SYS_NICE
    expose:
      - 3306
    environment:
      MYSQL_DATABASE: test
      MYSQL_ROOT_PASSWORD: root
    # doesn't actually depend on consul, but I can't figure out a way to have
    # a depends_on with multiple health check relationships, so chaining them to ensure
    # readyset-server waits on both consul and mysql for fallback.
    depends_on:
      consul:
        condition: service_healthy
    healthcheck:
      test: "mysqladmin ping"
      start_period: 10s
      interval: 10s
      timeout: 2s
      retries: 5
  readyset-server:
    image: 305232526136.dkr.ecr.us-east-2.amazonaws.com/readyset-server:latest
    expose:
      # ‚ùØ cat /proc/sys/net/ipv4/ip_local_port_range
      #   32768	60999
      - "32768-60999"
    environment:
      AUTHORITY_ADDRESS: consul:8500
      AUTHORITY: consul
      LISTEN_ADDRESS: 0.0.0.0
      EXTERNAL_ADDRESS: readyset-server
      NORIA_DEPLOYMENT: frameworktests
      REPLICATION_URL: mysql://root:root@mysql/test
      LOG_LEVEL: trace
    links:
      - mysql
      - consul
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--fail", "127.0.0.1:6033/prometheus"]
      interval: 10s
      timeout: 2s
      retries: 5
      start_period: 5s
  db:
    image: 305232526136.dkr.ecr.us-east-2.amazonaws.com/readyset-mysql:latest
    expose:
      - 3333
    environment:
      AUTHORITY_ADDRESS: consul:8500
      AUTHORITY: consul
      LISTEN_ADDRESS: 0.0.0.0:3333
      NORIA_DEPLOYMENT: frameworktests
      UPSTREAM_DB_URL: mysql://root:root@mysql/test
      LOG_LEVEL: trace
      ALLOWED_USERNAME: root
      ALLOWED_PASSWORD: root
    links:
      - readyset-server
      - mysql
      - consul
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h127.0.0.1", "--port=3333", "-uroot", "-proot"]
      interval: 10s
      timeout: 10s
      retries: 2
      start_period: 5s
    depends_on:
      readyset-server:
        condition: service_healthy
  test:
    image: "305232526136.dkr.ecr.us-east-2.amazonaws.com/frameworks/mysql/javascript/sequelize"
    depends_on:
      db:
        condition: service_healthy
    links:
      - db
    environment:
      FRAMEWORK: javascript/sequelize
      RS_USERNAME: root
      RS_PASSWORD: root
      RS_DATABASE: test
      RS_HOST: db
      RS_PORT: 3333
      RS_NUM_SHARDS: 1
      RS_DIALECT: mysql80
