steps:
  - label: ':docker: Build build image'
    key: build-image
    commands:
    - 'echo --- :docker: Building image'
    - >-
      docker build -f build/Dockerfile \
        --cache-from 069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest \
        -t 069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest \
        .
    - 'echo --- :docker: Pushing image'
    - 'docker push 069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
    plugins:
      ecr#v2.2.0:
        login: true

  - label: ":docker: Build noria-server image"
    key: noria-server-image
    commands:
      - "echo --- :docker: Building noria-server image"
      - >-
        docker build -f build/Dockerfile.noria-server \
          --cache-from 069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-server:latest \
          -t 069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-server:latest \
          .
      - "echo --- :docker: Pushing image"
      - "docker push 069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-server:latest"
    plugins:
      ecr#v2.2.0:
        login: true

  - label: ':docker: Build prettier image'
    key: prettier-image
    commands:
    - 'echo --- :docker: Building image'
    - >-
      docker build -f build/Dockerfile.prettier \
        --cache-from 069491470376.dkr.ecr.us-east-2.amazonaws.com/prettier:latest \
        -t 069491470376.dkr.ecr.us-east-2.amazonaws.com/prettier:latest \
        .
    - 'echo --- :docker: Pushing image'
    - 'docker push 069491470376.dkr.ecr.us-east-2.amazonaws.com/prettier:latest'
    plugins:
      ecr#v2.2.0:
        login: true

  - label: ':rust: Check rustfmt'
    key: check-rustfmt
    commands:
    - "cargo fmt -- --check"
    depends_on:
    - build-image
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':prettier: Check prettier'
    commands:
    - prettier --check "/workdir/js-client/**/*.js"
    depends_on:
    - prettier-image
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/prettier:latest'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':clippy: Check clippy'
    key: check-clippy
    commands:
    - "( echo '--- :rust: Checking launchpad'; cargo clippy -p launchpad -- -D warnings)"
    - "( echo '--- :rust: Checking msql-srv'; cargo clippy -p msql-srv -- -D warnings)"
    - "( echo '--- :rust: Checking nom-sql'; cargo clippy -p nom-sql -- -D warnings)"
    - "( echo '--- :rust: Checking nom-sql-postgres'; cargo clippy -p nom-sql --features postgres -- -D warnings)"
    - "( echo '--- :rust: Checking psql-srv'; cargo clippy -p psql-srv -- -D warnings)"
    - "( echo '--- :rust: Checking unbounded-interval-tree'; cargo clippy -p unbounded-interval-tree -- -D warnings)"
    - "( echo '--- :rust: Checking noria'; cargo clippy -p noria -- -D warnings)"
    - "( echo '--- :rust: Checking noria-mir'; cargo clippy -p noria-mir -- -D warnings)"
    - "( echo '--- :rust: Checking noria-server'; cargo clippy -p noria-server --all-targets -- -D warnings)"
    - "( echo '--- :rust: Checking noria-dataflow'; cargo clippy -p noria-dataflow -- -D warnings)"
    - "( echo '--- :rust: Checking noria-logictest'; cargo clippy -p noria-logictest -- -D warnings)"
    - "( echo '--- :rust: Checking replicators'; cargo clippy -p replicators -- -D warnings)"
    - "( echo '--- :rust: Checking maths'; cargo clippy -p maths -- -D warnings)"
    depends_on:
    - build-image
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ":rust: Build js-client shared library"
    key: build-js-client-lib
    commands:
      - "echo +++ :rust: Running cargo build"
      - RUSTFLAGS='-D warnings' cargo build --release -p js-client
      - strip target/release/libjs_client.so
    artifact_paths:
      - target/release/libjs_client.so
    depends_on:
      - build-image
    plugins:
      - docker#v3.7.0:
          image: "069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest"
          volumes:
            - "cargo-registry:/usr/local/cargo/registry"
            - "cargo-registry:/usr/local/cargo/registry"
          environment:
            - SCCACHE_BUCKET=readyset-sccache-e1
            - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
            - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ":nodejs: Test js-client"
    depends_on:
      - noria-server-image
      - build-js-client-lib
    command:
      - "echo --- downloading js-client artifact"
      - buildkite-agent artifact download target/release/libjs_client.so .
      - mv target/release/libjs_client.so index.node
      - "echo --- :yarn: installing dependecies"
      - yarn install
      - "echo +++ :jest: running js-client tests"
      - yarn run test
    plugins:
      - docker-compose#v3.7.0:
          run: node
          config: js-client/tests/build/docker-compose.yaml
          mount-buildkite-agent: true
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Check noria-logictest'
    key: build-noria-logictest
    commands:
    - 'echo +++ :rust: Running cargo check'
    - RUSTFLAGS='-D warnings' cargo check -v -p noria-logictest
    depends_on:
    - build-image
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Test noria-logictest'
    key: test-noria-logictest
    command:
    - 'echo +++ :rust: Running cargo test'
    - cargo test -v -p noria-logictest
    depends_on:
    - build-image
    - build-noria-logictest
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true
    env:
      SCCACHE_BUCKET: readyset-sccache

  - label: ':rust: Check query-generator'
    key: build-query-generator
    commands:
    - 'echo +++ :rust: Running cargo check'
    - RUSTFLAGS='-D warnings' cargo check -v -p query_generator
    depends_on:
    - build-image
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Check maths'
    key: check-maths
    commands:
    - 'echo +++ :rust: Running cargo check'
    - RUSTFLAGS='-D warnings' cargo check -v -p maths
    depends_on:
    - build-image
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Test maths'
    key: test-maths
    command:
    - 'echo +++ :rust: Running cargo test'
    - cargo test -v -p maths
    depends_on:
    - build-image
    - check-maths
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Check taster'
    key: build-taster
    commands:
    - 'echo +++ :rust: Running cargo check'
    - RUSTFLAGS='-D warnings' cargo check -v -p taster
    depends_on:
    - build-image
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Test taster'
    key: test-taster
    commands:
    - 'echo +++ :rust: Running cargo test'
    - cargo test -v -p taster
    depends_on:
    - build-image
    - build-taster
    plugins:
      - docker-compose#v3.7.0:
          run: app
          env:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
          config: taster/build/docker-compose.yaml
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Check launchpad'
    key: build-launchpad
    commands:
    - 'echo +++ :rust: Running cargo check'
    - RUSTFLAGS='-D warnings' cargo check -v -p launchpad
    depends_on:
    - build-image
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Test launchpad'
    key: test-launchpad
    command:
    - 'echo +++ :rust: Running cargo test'
    - cargo test -v -p launchpad
    depends_on:
    - build-image
    - build-launchpad
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true
    env:
      SCCACHE_BUCKET: readyset-sccache

  - label: ':rust: Check nom-sql'
    key: build-nom-sql
    commands:
    - 'echo +++ :rust: Running cargo check'
    - RUSTFLAGS='-D warnings' cargo check -v -p nom-sql
    - RUSTFLAGS='-D warnings' cargo check -v -p nom-sql --features postgres
    depends_on:
    - build-image
    - build-launchpad
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Test nom-sql'
    key: test-nom-sql
    command:
    - 'echo +++ :rust: Running cargo test'
    - cargo test -v -p nom-sql
    - cargo test -v -p nom-sql --features postgres
    depends_on:
    - build-image
    - build-nom-sql
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true
    env:
      SCCACHE_BUCKET: readyset-sccache

  - label: ':rust: Check unbounded-interval-tree'
    key: build-unbounded-interval-tree
    commands:
    - 'echo +++ :rust: Running cargo check'
    - RUSTFLAGS='-D warnings' cargo check -v -p unbounded-interval-tree
    depends_on:
    - build-image
    - build-launchpad
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Test unbounded-interval-tree'
    key: unbounded-interval-tree
    command:
    - 'echo +++ :rust: Running cargo test'
    - cd unbounded-interval-tree
    - cargo test -v -p unbounded-interval-tree
    depends_on:
    - build-image
    - build-unbounded-interval-tree
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true
    env:
      SCCACHE_BUCKET: readyset-sccache

  - label: ':rust: Check noria'
    key: build-noria
    commands:
    - 'echo +++ :rust: Running cargo check'
    - RUSTFLAGS='-D warnings' cargo check -v -p noria -p noria-server -p noria-applications -p noria-dataflow -p noria-common -p noria-dataflow -p reader_map -p noria-mir
    depends_on:
    - build-image
    - build-nom-sql
    - build-unbounded-interval-tree
    - build-launchpad
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Test noria'
    key: test-noria
    command:
    - 'echo +++ :rust: Running cargo test'
    - cargo test -v -p noria -p noria-server -p noria-applications -p noria-dataflow -p noria-common -p noria-dataflow -p reader_map -p noria-mir -- --skip integration_serial
    timeout_in_minutes: 60
    depends_on:
    - build-image
    - build-noria
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true
    env:
      SCCACHE_BUCKET: readyset-sccache
  - label: ':rust: Test noria-integration-serial'
    key: test-noria-integration-serial
    command:
    - 'echo +++ :rust: Running cargo test'
    - cargo test -v -p noria-server integration_serial -- --test-threads=1
    timeout_in_minutes: 60
    depends_on:
    - build-image
    - build-noria
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true
    env:
      SCCACHE_BUCKET: readyset-sccache



  - label: ':rust: Check noria-client'
    key: build-noria-client
    commands:
    - 'echo +++ :rust: Running cargo check'
    - RUSTFLAGS='-D warnings' cargo check -v -p noria-client
    depends_on:
    - build-noria
    - build-nom-sql
    - build-image
    - build-launchpad
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Test noria-client'
    key: test-noria-client
    command:
    - 'echo +++ :rust: Running cargo test'
    - cargo test -v -p noria-client
    depends_on:
    - build-image
    - build-noria-client
    timeout_in_minutes: 60
    plugins:
      - docker-compose#v3.7.0:
          run: app
          env:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
          config: noria-client/build/docker-compose.yaml
      - ecr#v2.2.0:
          login: true
    env:
      SCCACHE_BUCKET: readyset-sccache

  - label: ':rust: Check noria-client-adapter'
    key: build-noria-client-adapter
    commands:
    - 'echo +++ :rust: Running cargo check'
    - RUSTFLAGS='-D warnings' cargo check -v -p noria-client-adapter
    depends_on:
    - build-noria
    - build-nom-sql
    - build-image
    - build-launchpad
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Check noria-mysql'
    key: build-noria-mysql
    commands:
    - 'echo +++ :rust: Running cargo check'
    - RUSTFLAGS='-D warnings' cargo check -v -p noria-mysql
    depends_on:
    - build-noria
    - build-nom-sql
    - build-image
    - build-launchpad
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Test noria-mysql'
    key: test-noria-mysql
    command:
    - 'echo +++ :rust: Running cargo test'
    - cargo test -v -p noria-mysql
    depends_on:
    - build-image
    - build-noria-mysql
    plugins:
      - docker-compose#v3.7.0:
          run: app
          env:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
          config: noria-mysql/build/docker-compose.yaml
      - ecr#v2.2.0:
          login: true
    env:
      SCCACHE_BUCKET: readyset-sccache

  - label: ':rust: Check noria-psql'
    key: build-noria-psql
    commands:
    - 'echo +++ :rust: Running cargo check'
    - RUSTFLAGS='-D warnings' cargo check -v -p noria-psql
    depends_on:
    - build-noria
    - build-nom-sql
    - build-image
    - build-launchpad
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Test noria-psql'
    key: test-noria-psql
    command:
    - 'echo +++ :rust: Running cargo test'
    - cargo test -v -p noria-psql
    depends_on:
    - build-image
    - build-noria-psql
    plugins:
      - docker-compose#v3.7.0:
          run: app
          env:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
          config: noria-psql/build/docker-compose.yaml
      - ecr#v2.2.0:
          login: true
    env:
      SCCACHE_BUCKET: readyset-sccache

  - label: 'Run logictest'
    key: logictest
    command:
    - 'echo +++ Running noria-logictest'
    - cargo run --bin noria-logictest -- verify logictests
    depends_on:
    - build-image
    - build-noria-mysql
    - build-noria-logictest
    plugins:
      - docker-compose#v3.7.0:
          run: app
          env:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
          config: noria-mysql/build/docker-compose.yaml
      - ecr#v2.2.0:
          login: true
    env:
      SCCACHE_BUCKET: readyset-sccache

  - label: 'Run logictest with binlog replication'
    key: logictest-binlog
    command:
    - 'echo +++ Running noria-logictest with binlog replication'
    - cargo run --bin noria-logictest -- verify --binlog-mysql mysql://root:binlog@mysql:3307 logictests
    depends_on:
    - build-image
    - build-noria-mysql
    - build-noria-logictest
    - build-noria
    plugins:
      - docker-compose#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          run: app
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
          config: noria-mysql/build/docker-compose.yaml
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Check msql-srv'
    key: build-msql-srv
    commands:
    - 'echo +++ :rust: Running cargo check'
    - RUSTFLAGS='-D warnings' cargo check -v -p msql-srv
    depends_on:
    - build-image
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Test msql-srv'
    key: test-mssql-srv
    command:
    - 'echo +++ :rust: Running cargo test'
    - cargo test -v -p msql-srv
    depends_on:
    - build-msql-srv
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Check psql-srv'
    key: build-psql-srv
    commands:
    - 'echo +++ :rust: Running cargo check'
    - RUSTFLAGS='-D warnings' cargo check -v -p psql-srv
    depends_on:
    - build-image
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Test psql-srv'
    key: test-psql-srv
    command:
    - 'echo +++ :rust: Running cargo test'
    - cargo test -v -p psql-srv
    depends_on:
    - build-psql-srv
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Deploy docs'
    branches: 'master'
    command:
    - 'echo +++ :rust: Building docs'
    - cargo doc --workspace
    - 'echo +++ :ec2: Deploying docs'
    - apt-get install -y rsync
    - mkdir -p ~/.ssh
    - echo '172.31.41.177 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBByYJ6scdtZbyjpIeBB1BrIcfUI/jMYo/re6/0U8ulKEdeh8gyhQ/ujaktSeTQy6yJUE7bIPlpYja2zMsHkOycg=' > ~/.ssh/known_hosts
    - rsync -azPve ssh target/doc/ admin@172.31.41.177:/var/www/docs
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
          mount-ssh-agent: true
      - ecr#v2.2.0:
          login: true

# --- OPS STEPS ----#

  - label: ':terraform: Terraform fmt'
    commands:
    - cd ops/noria_module
    - terraform fmt -check -recursive -diff
    plugins:
    - docker#v3.7.0:
        image: hashicorp/terraform:0.14.7
        entrypoint: ""
        shell: ["/bin/sh", "-c"]

  - label: ':terraform: Terraform validate'
    commands:
    - cd ops/noria_module
    - terraform init -backend=false
    - terraform validate
    plugins:
    - docker#v3.7.0:
        image: hashicorp/terraform:0.14.7
        entrypoint: ""
        environment:
        # https://github.com/hashicorp/terraform/issues/21408#issuecomment-495746582
        - AWS_DEFAULT_REGION=us-east-2
        shell: ["/bin/sh", "-c"]

  - label: ':terraform: Check terraform best-practices'
    plugins:
    - docker#v3.7.0:
        image: wata727/tflint:latest
        mount-checkout: false
        volumes: ["./ops/noria_module:/data"]
        command: [
          "--only", "terraform_deprecated_interpolation",
          "--only", "terraform_deprecated_index",
          "--only", "terraform_unused_declarations",
          "--only", "terraform_comment_syntax",
          "--only", "terraform_documented_outputs",
          "--only", "terraform_documented_variables",
          "--only", "terraform_typed_variables",
          "--only", "terraform_module_pinned_source",
          "--only", "terraform_naming_convention",
          "--only", "terraform_required_version",
          "--only", "terraform_required_providers",
          "--only", "terraform_standard_module_structure",
          "--only", "terraform_workspace_remote"
        ]
