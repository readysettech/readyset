steps:
  - label: ':docker: Build build image'
    key: build-image
    commands:
    - 'echo --- :docker: Building image'
    - >-
      docker build -f build/Dockerfile \
        --cache-from 069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest \
        -t 069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest \
        .
    - 'echo --- :docker: Pushing image'
    - 'docker push 069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
    plugins:
      ecr#v2.2.0:
        login: true

  - label: ':rust: Check rustfmt'
    commands:
    - "cargo fmt -- --check"
    depends_on:
    - build-image
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':clippy: Check clippy'
    commands:
    - "( echo '--- :rust: Checking launchpad'; cargo clippy -p launchpad -- -D warnings)"
    - "( echo '--- :rust: Checking unbounded-interval-tree'; cargo clippy -p unbounded-interval-tree -- -D warnings)"
    - "( echo '--- :rust: Checking nom-sql'; cargo clippy -p nom-sql -- -D warnings)"
    depends_on:
    - build-image
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Build noria-logictest'
    key: build-noria-logictest
    commands:
    - 'echo +++ :rust: Running cargo build'
    - RUSTFLAGS='-D warnings' cargo build -v -p noria-logictest
    depends_on:
    - build-image
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Test noria-logictest'
    command:
    - 'echo +++ :rust: Running cargo test'
    - cargo test -v -p noria-logictest
    depends_on:
    - build-image
    - build-noria-logictest
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true
    env:
      SCCACHE_BUCKET: readyset-sccache

  - label: ':rust: Build query-generator'
    key: build-query-generator
    commands:
    - 'echo +++ :rust: Running cargo build'
    - RUSTFLAGS='-D warnings' cargo build -v -p query_generator
    depends_on:
    - build-image
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Build taster'
    key: build-taster
    commands:
    - 'echo +++ :rust: Running cargo build'
    - RUSTFLAGS='-D warnings' cargo build -v -p taster
    depends_on:
    - build-image
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Test taster'
    key: test-taster
    commands:
    - 'echo +++ :rust: Running cargo test'
    - cargo test -v -p taster
    depends_on:
    - build-image
    - build-taster
    plugins:
      - docker-compose#v3.7.0:
          run: app
          env:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
          config: taster/build/docker-compose.yaml
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Build launchpad'
    key: build-launchpad
    commands:
    - 'echo +++ :rust: Running cargo build'
    - RUSTFLAGS='-D warnings' cargo build -v -p launchpad
    depends_on:
    - build-image
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Test launchpad'
    command:
    - 'echo +++ :rust: Running cargo test'
    - cargo test -v -p launchpad
    depends_on:
    - build-image
    - build-launchpad
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true
    env:
      SCCACHE_BUCKET: readyset-sccache

  - label: ':rust: Build nom-sql'
    key: build-nom-sql
    commands:
    - 'echo +++ :rust: Running cargo build'
    - RUSTFLAGS='-D warnings' cargo build -v -p nom-sql
    depends_on:
    - build-image
    - build-launchpad
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Test nom-sql'
    command:
    - 'echo +++ :rust: Running cargo test'
    - cargo test -v -p nom-sql
    depends_on:
    - build-image
    - build-nom-sql
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true
    env:
      SCCACHE_BUCKET: readyset-sccache

  - label: ':rust: Build unbounded-interval-tree'
    key: build-unbounded-interval-tree
    commands:
    - 'echo +++ :rust: Running cargo build'
    - RUSTFLAGS='-D warnings' cargo build -v -p unbounded-interval-tree
    depends_on:
    - build-image
    - build-launchpad
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Test unbounded-interval-tree'
    command:
    - 'echo +++ :rust: Running cargo test'
    - cd unbounded-interval-tree
    - cargo test -v -p unbounded-interval-tree
    depends_on:
    - build-image
    - build-unbounded-interval-tree
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true
    env:
      SCCACHE_BUCKET: readyset-sccache

  - label: ':rust: Build noria'
    key: build-noria
    commands:
    - 'echo +++ :rust: Running cargo build'
    - RUSTFLAGS='-D warnings' cargo build -v -p noria -p noria-server -p noria-applications
    depends_on:
    - build-image
    - build-nom-sql
    - build-unbounded-interval-tree
    - build-launchpad
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Test noria'
    command:
    - 'echo +++ :rust: Running cargo test'
    - cargo test -v -p noria -p noria-server -p noria-applications
    depends_on:
    - build-image
    - build-noria
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true
    env:
      SCCACHE_BUCKET: readyset-sccache

  - label: ':rust: Build noria-client'
    key: build-noria-client
    commands:
    - 'echo +++ :rust: Running cargo build'
    - RUSTFLAGS='-D warnings' cargo build -v -p noria-client
    depends_on:
    - build-noria
    - build-nom-sql
    - build-image
    - build-launchpad
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Test noria-client'
    command:
    - 'echo +++ :rust: Running cargo test'
    - cargo test -v -p noria-client
    depends_on:
    - build-image
    - build-noria-client
    plugins:
      - docker-compose#v3.7.0:
          run: app
          env:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
          config: noria-client/build/docker-compose.yaml
      - ecr#v2.2.0:
          login: true
    env:
      SCCACHE_BUCKET: readyset-sccache

  - label: ':rust: Build noria-mysql'
    key: build-noria-mysql
    commands:
    - 'echo +++ :rust: Running cargo build'
    - RUSTFLAGS='-D warnings' cargo build -v -p noria-mysql
    depends_on:
    - build-noria
    - build-nom-sql
    - build-image
    - build-launchpad
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Test noria-mysql'
    command:
    - 'echo +++ :rust: Running cargo test'
    - cargo test -v -p noria-mysql
    depends_on:
    - build-image
    - build-noria-mysql
    plugins:
      - docker-compose#v3.7.0:
          run: app
          env:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
          config: noria-mysql/build/docker-compose.yaml
      - ecr#v2.2.0:
          login: true
    env:
      SCCACHE_BUCKET: readyset-sccache

  - label: ':rust: Build noria-psql'
    key: build-noria-psql
    commands:
    - 'echo +++ :rust: Running cargo build'
    - RUSTFLAGS='-D warnings' cargo build -v -p noria-psql
    depends_on:
    - build-noria
    - build-nom-sql
    - build-image
    - build-launchpad
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Test noria-psql'
    command:
    - 'echo +++ :rust: Running cargo test'
    - cargo test -v -p noria-psql
    depends_on:
    - build-image
    - build-noria-psql
    plugins:
      - docker-compose#v3.7.0:
          run: app
          env:
          - SCCACHE_BUCKET=readyset-sccache
          config: noria-psql/build/docker-compose.yaml
      - ecr#v2.2.0:
          login: true
    env:
      SCCACHE_BUCKET: readyset-sccache

  - label: 'Run logictest'
    command:
    - 'echo +++ Running noria-logictest'
    - cargo run --bin noria-logictest -- verify logictests --zookeeper-host zookeeper
    depends_on:
    - build-image
    - build-noria-mysql
    - build-noria-logictest
    plugins:
      - docker-compose#v3.7.0:
          run: app
          env:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
          config: noria-mysql/build/docker-compose.yaml
      - ecr#v2.2.0:
          login: true
    env:
      SCCACHE_BUCKET: readyset-sccache

  - label: ':rust: Build debezium connector'
    key: build-debezium-connector
    commands:
    - 'echo +++ :rust: Running cargo build'
    - RUSTFLAGS='-D warnings' cargo build -v -p debezium_connector
    depends_on:
    - build-noria
    - build-image
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Test debezium connector'
    command:
    - 'echo +++ :rust: Running cargo test'
    - cargo test -v -p debezium_connector
    depends_on:
    - build-debezium-connector
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Build psql-srv'
    key: build-psql-srv
    commands:
    - 'echo +++ :rust: Running cargo build'
    - RUSTFLAGS='-D warnings' cargo build -v -p psql-srv
    depends_on:
    - build-image
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Test psql-srv'
    command:
    - 'echo +++ :rust: Running cargo test'
    - cargo test -v -p psql-srv
    depends_on:
    - build-psql-srv
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
      - ecr#v2.2.0:
          login: true

  - label: ':rust: Deploy docs'
    branches: 'master'
    command:
    - 'echo +++ :rust: Building docs'
    - cargo doc --workspace
    - 'echo +++ :ec2: Deploying docs'
    - apt-get install -y rsync
    - mkdir -p ~/.ssh
    - echo '172.31.41.177 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBByYJ6scdtZbyjpIeBB1BrIcfUI/jMYo/re6/0U8ulKEdeh8gyhQ/ujaktSeTQy6yJUE7bIPlpYja2zMsHkOycg=' > ~/.ssh/known_hosts
    - rsync -azPve ssh target/doc/ admin@172.31.41.177:/var/www/docs
    plugins:
      - docker#v3.7.0:
          image: '069491470376.dkr.ecr.us-east-2.amazonaws.com/noria-build:latest'
          volumes:
          - 'target:/workdir/target'
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - SCCACHE_BUCKET=readyset-sccache-e1
          - AWS_IAM_CREDENTIALS_URL=http://169.254.169.254/latest/meta-data/iam/security-credentials/buildkite-Role
          - CARGO_INCREMENTAL=0
          mount-ssh-agent: true
      - ecr#v2.2.0:
          login: true

# --- OPS STEPS ----#

  - label: ':terraform: Terraform fmt'
    commands:
    - cd ops/noria_module
    - terraform fmt -check -recursive -diff
    plugins:
    - docker#v3.7.0:
        image: hashicorp/terraform:0.14.7
        entrypoint: ""
        shell: ["/bin/sh", "-c"]

  - label: ':terraform: Terraform validate'
    commands:
    - cd ops/noria_module
    - terraform init -backend=false
    - terraform validate
    plugins:
    - docker#v3.7.0:
        image: hashicorp/terraform:0.14.7
        entrypoint: ""
        environment:
        # https://github.com/hashicorp/terraform/issues/21408#issuecomment-495746582
        - AWS_DEFAULT_REGION=us-east-2
        shell: ["/bin/sh", "-c"]

  - label: ':terraform: Check terraform best-practices'
    plugins:
    - docker#v3.7.0:
        image: wata727/tflint:latest
        mount-checkout: false
        volumes: ["./ops/noria_module:/data"]
        command: [
          "--only", "terraform_deprecated_interpolation",
          "--only", "terraform_deprecated_index",
          "--only", "terraform_unused_declarations",
          "--only", "terraform_comment_syntax",
          "--only", "terraform_documented_outputs",
          "--only", "terraform_documented_variables",
          "--only", "terraform_typed_variables",
          "--only", "terraform_module_pinned_source",
          "--only", "terraform_naming_convention",
          "--only", "terraform_required_version",
          "--only", "terraform_required_providers",
          "--only", "terraform_standard_module_structure",
          "--only", "terraform_workspace_remote"
        ]
