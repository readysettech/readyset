#!/usr/bin/env bash

set -xeuo pipefail

if [ -z ${GERRIT_CHANGE_ID+x} ] && [ -z ${GERRIT_PATCHSET+x} ]; then
    echo "Not a CL build, skipping"
    exit 0
fi

if [ "$#" -ge 1 ]; then
    case "$1" in
        failed)
            verified="-1"
            verb="failed"
            ;;
        passed)
            verified="1"
            verb="passed"
            ;;
        *)
            echo "Usage: $0 [<failed|passed>]"
            exit 1
            ;;
    esac
else
    set +e
    read -r -d '' query <<EOF
query BuildStatusQuery(\$buildID: ID!) {
  build(uuid: \$buildID) {
    jobs(first: 15, passed: false) {
      edges {
        node {
          ...on JobTypeCommand {
            softFailed
          }
        }
      }
    }
  }
}
EOF
    set -e

    failed_jobs=$(
        jq -n \
            --arg query "$query" \
            --arg buildID "$BUILDKITE_BUILD_ID" \
            '{ query: $query, variables: { buildID: $buildID } }' \
            | curl 'https://graphql.buildkite.com/v1' \
            --silent \
            -H "Authorization: Bearer $BUILDKITE_GRAPHQL_API_TOKEN" \
            -d@- \
            | jq -r '.data.build.jobs.edges | map(select(.node.softFailed | not)) | length')
    if [ "$failed_jobs" -gt 0 ]; then
        verified="-1"
        verb="failed"
    else
        verified="1"
        verb="passed"
    fi
fi

msg="Build of patchset $GERRIT_PATCHSET $verb: $BUILDKITE_BUILD_URL"

if [ $verified = 1 ]; then
    ignore_default_attention_set_rules="true"
else
    ignore_default_attention_set_rules="false"
fi

body="{
    \"message\": \"$msg\",
    \"omit_duplicate_comments\": true,
    \"ignore_default_attention_set_rules\": $ignore_default_attention_set_rules,
    \"labels\": {
        \"Verified\": $verified
    },
    \"tag\": \"autogenerated:buildkite~result\",
    \"notify\": \"NONE\"
}"

url="https://gerrit.readyset.name/a/changes/$GERRIT_CHANGE_ID/revisions/$GERRIT_PATCHSET/review"

curl \
    --retry 3 \
    -v \
    -X POST \
    --fail-with-body \
    -u "buildkite:$BUILDKITE_GERRIT_PASSWORD" \
    -H "Content-Type: application/json" \
    "$url" \
    -d "$body"
