steps:
  - block: "Release production external :amazon-ec2: AMIs?"
    fields:
      - key: release-name
        required: true
        text: Release Name (This name WILL be seen by customers)

  - label: ':rust: Build readyset release binaries'
    key: build-release-binaries
    commands:
    - 'echo +++ :rust: Running cargo build'
    - RUSTFLAGS='-D warnings' cargo build --release --bin noria-server --bin noria-mysql --bin noria-psql --bin ensure-ebs-volume --bin metrics-aggregator
    - strip target/release/noria-server target/release/noria-mysql target/release/noria-psql target/release/ensure-ebs-volume target/release/metrics-aggregator
    artifact_paths:
    - target/release/noria-server
    - target/release/noria-mysql
    - target/release/noria-psql
    - target/release/ensure-ebs-volume
    - target/release/metrics-aggregator
    plugins:
      - docker#v3.9.0:
          image: '305232526136.dkr.ecr.us-east-2.amazonaws.com/readyset-build:${BUILDKITE_COMMIT}'
          volumes:
          - 'cargo-registry:/usr/local/cargo/registry'
          environment:
          - CACHEPOT_BUCKET=readysettech-build-sccache-us-east-2
          - CACHEPOT_REGION=us-east-2
          - CARGO_INCREMENTAL=0
      - ecr#v2.5.0:
          login: true
          retries: 3

  - label: ":packer: Run production build for all external images"
    key: packer-build-external
    depends_on: build-release-binaries
    commands:
    - cd /workdir/ops/images
    - mkdir binaries
    - 'echo +++ :buildkite: Downloading binary artifacts'
    - buildkite-agent artifact download target/release/* binaries/
    - packer init .
    - 'echo +++ :packer: Running packer build'
    - packer build -only=amazon-ebs.readyset-* .
    - 'echo +++ :buildkite: Uploading manifest artifact'
    - buildkite-agent artifact upload packer-manifest.json
    plugins:
    - docker#v3.9.0:
        image: 305232526136.dkr.ecr.us-east-2.amazonaws.com/readyset-ops:${BUILDKITE_COMMIT}
        propagate-environment: true
        environment:
          - PACKER_CREATE_AMI=true
          - PACKER_PRODUCTION=true
    - ecr#v2.5.0:
        login: true
        retries: 3

  - label: ":packer: Run copy production images to deploy account"
    key: packer-deploy-external
    depends_on: packer-build-external
    commands:
    - export RELEASE_NAME="$(buildkite-agent meta-data get release-name)"
    - cd /workdir/ops/image-deploy
    - buildkite-agent artifact download packer-manifest.json .
    - mv packer-manifest.json source-packer-manifest.json
    - packer init .
    - ./run-with-manifest-as-env.sh source-packer-manifest.json packer build -only=amazon-ebs.readyset-* .
    - buildkite-agent artifact upload packer-manifest.json
    plugins:
    - docker#v3.9.0:
        image: 305232526136.dkr.ecr.us-east-2.amazonaws.com/readyset-ops:${BUILDKITE_COMMIT}
        propagate-environment: true
        propagate-aws-auth-tokens: true
        environment:
          - PACKER_CREATE_AMI=true
          - PACKER_PRODUCTION=true
    - ecr#v2.5.0:
        login: true
        retries: 3
    - cultureamp/aws-assume-role#v0.2.0
    env:
      AWS_ASSUME_ROLE_ARN: arn:aws:iam::888984949675:role/Packer
    agents:
      queue: ops
