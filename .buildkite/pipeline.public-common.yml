# This file contains common build steps that can be included in other pipeline contexts.

# Non-buildkite nodes to re-use:
common_values:
  retry: &retry_on_agent_kill
    automatic: &agent_kill_conditions
      - signal_reason: agent_stop  # spot instance killed by AWS
        limit: 3
      - exit_status: -1            # agent timed out
        signal_reason: none
        limit: 3

env:
  ECR_PLUGIN_VERSION: "v2.9.0"
  DOCKER_PLUGIN_VERSION: "v5.12.0"
  DOCKER_COMPOSE_PLUGIN_VERSION: "v5.5.0"

steps:

  - label: ':rust: Check rustfmt'
    key: check-rustfmt
    commands:
      - '[ -d public ] && cd public'
      - "cargo --locked fmt -- --check"
    depends_on:
    - build-image
    plugins:
      - docker#${DOCKER_PLUGIN_VERSION}:
          image: '305232526136.dkr.ecr.us-east-2.amazonaws.com/readyset-build:${BUILDKITE_COMMIT}'
          volumes:
          - 'target:/workdir/target'
          environment:
          - SCCACHE_BUCKET=readysettech-build-sccache-us-east-2
          - SCCACHE_REGION=us-east-2
          - CARGO_INCREMENTAL=0
          - RUST_BACKTRACE=full
      - ecr#${ECR_PLUGIN_VERSION}:
          login: true
          retries: 3
    retry: *retry_on_agent_kill

  - label: ':rust: :lock: Check cargo-deny'
    commands:
      - '[ -d public ] && cd public'
      - export RUST_BACKTRACE=full
      - cargo --locked deny check
    depends_on:
    - cargo-deny-image
    plugins:
      - docker#${DOCKER_PLUGIN_VERSION}:
          image: '305232526136.dkr.ecr.us-east-2.amazonaws.com/cargo-deny:${BUILDKITE_COMMIT}'
          environment:
          - SCCACHE_BUCKET=readysettech-build-sccache-us-east-2
          - SCCACHE_REGION=us-east-2
          - CARGO_INCREMENTAL=0
          - RUST_BACKTRACE=full
      - ecr#${ECR_PLUGIN_VERSION}:
          login: true
          retries: 3
    retry: *retry_on_agent_kill

  - label: ':clippy: Check clippy'
    key: check-clippy
    commands:
      - '[ -d public ] && cd public'
      - export RUST_BACKTRACE=full
      - cargo --locked clippy --workspace --all-targets --all-features -- -D warnings
    depends_on:
    - build-image
    plugins:
      - docker#${DOCKER_PLUGIN_VERSION}:
          image: '305232526136.dkr.ecr.us-east-2.amazonaws.com/readyset-build:${BUILDKITE_COMMIT}'
          volumes:
          - 'target:/workdir/target'
          environment:
          - SCCACHE_BUCKET=readysettech-build-sccache-us-east-2
          - SCCACHE_REGION=us-east-2
          - CARGO_INCREMENTAL=0
          - RUST_BACKTRACE=full
      - ecr#${ECR_PLUGIN_VERSION}:
          login: true
          retries: 3
    retry: *retry_on_agent_kill

  - label: ':rust: Run tests'
    key: rust-tests
    parallelism: 2
    commands:
      - '[ -d public ] && cd public'
      - '.buildkite/run-tests.sh'
    timeout_in_minutes: 60
    depends_on:
    - build-image
    plugins:
      - docker-compose#${DOCKER_COMPOSE_PLUGIN_VERSION}:
          run: app
          tty: true           # nextest makes colored output if we use tty
          env:
          - BUILDKITE_PARALLEL_JOB
          - SCCACHE_BUCKET=readysettech-build-sccache-us-east-2
          - SCCACHE_REGION=us-east-2
          - CARGO_INCREMENTAL=0
          - RUST_BACKTRACE=full
          - MYSQL_HOST=mysql
          - MYSQL_PWD=noria
          - MYSQL_DB=noria
          volumes:
            - 'target:/workdir/target'
          config:
            - "${GIT_PUBLIC_ROOT}build/docker-compose.yml"
            - "${GIT_PUBLIC_ROOT}build/docker-compose.ci-test.yml"
          mount-buildkite-agent: true
          quiet-pull: true    # don't log all the image pulls
          pull-retries: 3
      - ecr#${ECR_PLUGIN_VERSION}:
          login: true
          retries: 3
    agents:
      queue: c6a-4xlarge
    retry: *retry_on_agent_kill

  - label: 'Run logictest'
    key: logictest
    command:
      - 'echo +++ Running readyset-logictest'
      - '[ -d public ] && cd public'
      - export RUST_BACKTRACE=full
      - cargo --locked run --bin readyset-logictest -- verify logictests
      - cargo --locked run --bin readyset-logictest -- verify logictests/psql --database-type postgresql
      - cargo --locked run --bin readyset-logictest -- verify logictests/mysql --database-type mysql
    timeout_in_minutes: 60
    depends_on:
    - build-image
    plugins:
      - docker-compose#${DOCKER_COMPOSE_PLUGIN_VERSION}:
          run: app
          tty: true           # tests make colored output if we use tty
          env:
          - SCCACHE_BUCKET=readysettech-build-sccache-us-east-2
          - SCCACHE_REGION=us-east-2
          - CARGO_INCREMENTAL=0
          - RUST_BACKTRACE=full
          config:
            - "${GIT_PUBLIC_ROOT}build/docker-compose.yml"
            - "${GIT_PUBLIC_ROOT}build/docker-compose.ci-test.yml"
          quiet-pull: true    # don't log all the image pulls
          pull-retries: 3
      - ecr#${ECR_PLUGIN_VERSION}:
          login: true
          retries: 3
    retry: *retry_on_agent_kill

  - label: 'Test benchmark framework'
    key: test-benchmark
    command:
      - '[ -d public ] && cd public'
      - 'echo +++ Running benchmarks'
      - export RUST_BACKTRACE=full
      - cargo --locked run --bin benchmarks -- --local --database-type mysql --benchmark benchmarks/src/yaml/benchmarks/test/benchmark_test.yaml
      - cargo --locked run --bin benchmarks -- --local-with-upstream mysql://root:noria@mysql/noria --database-type mysql --benchmark benchmarks/src/yaml/benchmarks/test/benchmark_test.yaml
    timeout_in_minutes: 60
    depends_on:
    - build-image
    plugins:
      - docker-compose#${DOCKER_COMPOSE_PLUGIN_VERSION}:
          image: '305232526136.dkr.ecr.us-east-2.amazonaws.com/readyset-build:${BUILDKITE_COMMIT}'
          run: app
          environment:
          - SCCACHE_BUCKET=readysettech-build-sccache-us-east-2
          - SCCACHE_REGION=us-east-2
          - CARGO_INCREMENTAL=0
          - RUST_BACKTRACE=full
          config:
            - "${GIT_PUBLIC_ROOT}build/docker-compose.yml"
            - "${GIT_PUBLIC_ROOT}build/docker-compose.ci-test.yml"
          quiet-pull: true    # don't log all the image pulls
          pull-retries: 3
      - ecr#${ECR_PLUGIN_VERSION}:
          login: true
          retries: 3
    retry: *retry_on_agent_kill
