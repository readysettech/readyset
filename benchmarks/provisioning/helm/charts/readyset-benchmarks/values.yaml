global:
  imagePullPolicy: IfNotPresent
  namespace: build

benchmark:
  runner:
    # -- Labels applied to any benchmark runner jobs
    labels:
      app: benchmarks
      buildNumber: 1
      rdbms: mysql
    # -- Image configuration for benchmark runner
    image:
      # -- Benchmark repository
      repository: "305232526136.dkr.ecr.us-east-2.amazonaws.com/readyset-benchmarks"
      # -- Benchmark repo image tag
      tag: "0.1.2"
    # -- Entrypoint for benchmark runner container
    entrypoint: "/bin/bash"
    # -- Command passed to entrypoint of benchmark runner container
    command: ["/usr/src/app/scripts/run-mysql-benchmark-ci.sh"]
    # -- Kubernetes job restart behavior for benchmark runners
    restartPolicy: "Never"
    # -- Kubernetes job max retries
    backoffLimit: 0
    env:
      # -- Instance label to tag all Prometheus metrics with
      INSTANCE_LABEL: "${PROM_INSTANCE_LABEL}"
      # -- Connection string to adapter NLB
      TARGET_CONN_STR: ""
      # -- Connection string pointing at RDS hostname
      SETUP_CONN_STR: "mysql://root:root@mysql/test"
      # -- Prometheus push gateway host for benchmark metrics
      PROMETHEUS_PUSH_GATEWAY: "http://prom-pushgw-prometheus-pushgateway:9091"
      # -- Prometheus hostname for benchmark metrics
      PROMETHEUS_SERVER: "http://prom-stack-kube-prometheus-prometheus:9090"
      # -- Location benchmark runner with save report files
      REPORT_SAVE_DIR: "/tmp/benchmark-results"
      # -- Tells entrypoint script to serialize all results in a single json string at the end of tests
      REPORT_JSON_ENABLED: "enabled"
    # -- Resource controls for benchmark runner pods
    resources:
      requests:
        memory: 5000Mi
        cpu: 1500m
    # -- Affinities to apply to benchmark runner jobs.
    # -- By default, we're requesting only 1 runner to run per EC2.
    affinity:
      # Don't schedule two runners on the same k8s worker
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - benchmarks
          topologyKey: kubernetes.io/hostname
      # Only schedule runners on benchmark nodes
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: readyset.io/worker
              operator: In
              values:
              - benchmarks
    # -- Tolerations to apply to benchmark runner jobs.
    # -- By default we only tolerate nodes designated for benchmarks.
    tolerations:
    - key: "benchmarks"
      operator: "Exists"
      effect: "NoSchedule"
