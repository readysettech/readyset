[package]
name = "readyset"
version = "1.11.0"
publish = false
authors = ["Readyset Technology, Inc. <info@readyset.io>"]
edition = "2021"
license = "BSL 1.1"
description = """\
A real-time SQL caching engine for Postgres and MySQL."""


[dependencies]
anyhow = { workspace = true }
chrono = { workspace = true }
clap = { workspace = true, features = ["derive", "env"] }
crossbeam-skiplist = { workspace = true }
futures-util = { workspace = true }
fail = { workspace = true }
failpoint-macros = { path = "../failpoint-macros" }
metrics = { workspace = true }
metrics-exporter-prometheus = { workspace = true }
reqwest = { workspace = true, features = ["json"] }
tokio = { workspace = true, features = ["full"] }
tokio-native-tls = { workspace = true }
tokio-stream = { workspace = true, features = ["net"] }
tracing = { workspace = true, features = ["release_max_level_debug"] }
tracing-subscriber = { workspace = true }
tracing-futures = { workspace = true }

# Local dependencies
database-utils = { path = "../database-utils" }
dataflow-state = { path = "../dataflow-state" }
health-reporter = { path = "../health-reporter" }
mysql-srv = { path = "../mysql-srv" }
nom-sql = { path = "../nom-sql" }
psql-srv = { path = "../psql-srv" }
readyset-adapter = { path = "../readyset-adapter" }
readyset-alloc = { path = "../readyset-alloc" }
readyset-alloc-metrics = { path = "../readyset-alloc-metrics" }
readyset-client = { path = "../readyset-client/" }
readyset-client-metrics = { path = "../readyset-client-metrics" }
readyset-common = { path = "../readyset-common" }
readyset-data = { path = "../readyset-data" }
readyset-dataflow = { path = "../readyset-dataflow" }
readyset-errors = { path = "../readyset-errors" }
readyset-mysql = { path = "../readyset-mysql" }
readyset-psql = { path = "../readyset-psql" }
readyset-server = { path = "../readyset-server/" }
readyset-sql-passes = { path = "../readyset-sql-passes" }
readyset-telemetry-reporter = { path = "../readyset-telemetry-reporter" }
readyset-tracing = { path = "../readyset-tracing" }
readyset-util = { path = "../readyset-util" }
readyset-version = { path = "../readyset-version" }
replicators = { path = "../replicators" }
serde_json = { workspace = true }


[dev-dependencies]
criterion = { workspace = true, features = ["html_reports"] }
pprof = { workspace = true, features = ["flamegraph", "criterion"] }
serial_test = { workspace = true }
temp-dir = { workspace = true }
test-utils = { path = "../test-utils" }

[[bench]]
name = "query_logger"
harness = false

[features]
failure_injection = [
    "fail/failpoints",
    "readyset-server/failure_injection",
    "readyset-util/failure_injection",
]

[package.metadata.generate-rpm]
assets = [
    { source = "target/release/readyset", dest = "/usr/bin/readyset", mode = "755" },
    { source = "pkg/common/readyset.conf", dest = "/etc/readyset/readyset.conf", mode = "600", config = true },
    { source = "pkg/common/readyset.service", dest = "/lib/systemd/system/readyset.service", mode = "644" },
]
# These get set using cargo-generate-rpm --metadata-overwrite=<SCRIPTLETS.TOML> at package build time.
#post_install_script = ...
#pre_uninstall_script = ...
#post_uninstall_script = ...


[package.metadata.deb]
maintainer = "Readyset Technology <info@readyset.io>"
copyright = "2024, Readyset Technology, Inc."
license-file = ["../LICENSE", "1"]
depends = "$auto"
section = "Databases"
priority = "optional"
assets = [
    [
        "target/release/readyset",
        "usr/bin/",
        "755",
    ],
    [
        "pkg/common/readyset.conf",
        "/etc/readyset/readyset.conf",
        "600",
    ],
    [
        "pkg/common/readyset.service",
        "/lib/systemd/system/readyset.service",
        "644",
    ],
]
maintainer-scripts = "pkg/debian"
conf-files = ["/etc/readyset/readyset.conf"]
