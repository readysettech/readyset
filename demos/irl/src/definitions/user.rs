use mysql::prelude::FromRow;
use mysql::{FromRowError, Row};

use crate::get;

#[allow(dead_code)]
pub struct User {
    // All columns from `users`
    id: u64,                           //  int unsigned NOT NULL AUTO_INCREMENT,
    role_id: i64,                      //  bigint DEFAULT NULL,
    first: String,                     //  varchar(155) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
    last: String,                      //  varchar(155) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
    username: String,                  //  varchar(30) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
    iso_code: String,                  //  varchar(2) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
    phone: String,                     //  varchar(20) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
    email: String,                     //  varchar(155) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
    avatar: String, //  varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT 'users/default.png',
    picture: String, //  varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT '',
    code: String,   //  varchar(5) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
    signed_up: i64, //  tinyint(1) DEFAULT '0',
    key: String,    //  varchar(64) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
    granted_notifs: i64, //  tinyint(1) DEFAULT '0',
    granted_contacts: i64, //  tinyint(1) DEFAULT '0',
    latitude: f64,  //  double(18,12) unsigned DEFAULT NULL,
    longitude: f64, //  double(18,12) DEFAULT NULL,
    timezone: String, //  varchar(40) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
    last_session: String, //  datetime DEFAULT NULL,
    location_hidden: i64, //  tinyint(1) DEFAULT '0',
    is_deleted: i64, //  tinyint(1) DEFAULT '0',
    birthday: String, //  date DEFAULT NULL,
    gender: String, //  char(1) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
    school_type: String, //  char(1) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
    school_id: i64, //  int DEFAULT NULL,
    grade: i64,     //  int DEFAULT NULL,
    signup_date: String, //  datetime DEFAULT NULL,
    updated_at: String, //  timestamp NULL DEFAULT NULL,
    created_at: String, //  timestamp NULL DEFAULT NULL,
    hex_color: String, //  varchar(16) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
    is_verified: i64, //  tinyint NOT NULL DEFAULT '0',
    bio: String,    //  varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
    is_public: i64, //  tinyint NOT NULL DEFAULT '0',
    organization_id: i64, //  int DEFAULT NULL,
    ip_address: String, //  varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
    is_older_than_thirteen: i64, //  tinyint NOT NULL DEFAULT '0',
    profile_background: String, //  text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
    app_download_token: String, //  varchar(155) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
    api_content_provider_name: String, //  varchar(30) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
    api_content_provider_id: String, //  varchar(155) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
    last_login: String, //  timestamp NULL DEFAULT NULL,
    permissions: String, //  json DEFAULT NULL,
    encrypted_email: String, //  varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
    encrypted_phone: String, //  varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
    password: String, //  varchar(60) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
    opted_in_for_sms_to_contacts: i64, //  tinyint NOT NULL DEFAULT '0',
}

impl FromRow for User {
    fn from_row_opt(row: Row) -> Result<Self, FromRowError>
    where
        Self: Sized,
    {
        Ok(User {
            id: get!(row, 0),
            role_id: get!(row, 1),
            first: get!(row, 2),
            last: get!(row, 3),
            username: get!(row, 4),
            iso_code: get!(row, 5),
            phone: get!(row, 6),
            email: get!(row, 7),
            avatar: get!(row, 8),
            picture: get!(row, 9),
            code: get!(row, 10),
            signed_up: get!(row, 11),
            key: get!(row, 12),
            granted_notifs: get!(row, 13),
            granted_contacts: get!(row, 14),
            latitude: get!(row, 15),
            longitude: get!(row, 16),
            timezone: get!(row, 17),
            last_session: get!(row, 18),
            location_hidden: get!(row, 19),
            is_deleted: get!(row, 20),
            birthday: get!(row, 21),
            gender: get!(row, 22),
            school_type: get!(row, 23),
            school_id: get!(row, 24),
            grade: get!(row, 25),
            signup_date: get!(row, 26),
            updated_at: get!(row, 27),
            created_at: get!(row, 28),
            hex_color: get!(row, 29),
            is_verified: get!(row, 30),
            bio: get!(row, 31),
            is_public: get!(row, 32),
            organization_id: get!(row, 33),
            ip_address: get!(row, 34),
            is_older_than_thirteen: get!(row, 35),
            profile_background: get!(row, 36),
            app_download_token: get!(row, 37),
            api_content_provider_name: get!(row, 38),
            api_content_provider_id: get!(row, 39),
            last_login: get!(row, 40),
            permissions: get!(row, 41),
            encrypted_email: get!(row, 42),
            encrypted_phone: get!(row, 43),
            password: get!(row, 44),
            opted_in_for_sms_to_contacts: get!(row, 45),
        })
    }
}
