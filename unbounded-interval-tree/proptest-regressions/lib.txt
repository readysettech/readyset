# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc 2dbc4e45268c0efdf26c4beea6d7c851b89cd8048ac2d3a1ddc35090d9450e86 # shrinks to mut tree = IntervalTree { root: Some(Node { key: (Included(0), Included(213980274)), value: Included(213980274), left: None, right: None }), size: 1 }, to_remove = (Included(0), Included(0))
cc 1d2a078648f92c51a950b52c8745ef395307fd197e731bc79eaa27d6d4273cdb # shrinks to mut tree = IntervalTree { root: Some(Node { key: (Included(0), Included(0)), value: Unbounded, left: Some(Node { key: (Included(-1), Unbounded), value: Unbounded, left: Some(Node { key: (Included(-2), Included(1240189635)), value: Included(1240189635), left: None, right: None }), right: None }), right: None }), size: 3 }, to_remove = (Included(1), Included(1))
cc cd35283e7ad46d2f419863795b6f69f5b2e848d7b73855ba3cbf04a5d8d7f17e # shrinks to mut tree = IntervalTree { root: None, size: 0 }, to_remove = (Included(0), Included(0)), other = (Included(0), Unbounded)
cc cf6640b330b95b3ce1f970dc43bf1bd0bed11acea2529f0c8d12e2d3a589033c # shrinks to mut tree = IntervalTree { root: Some(Node { key: (Included(0), Included(0)), value: Included(0), left: Some(Node { key: (Included(-1), Included(0)), value: Included(0), left: None, right: None }), right: None }) }, to_remove = (Unbounded, Excluded(1)), other = (Excluded(2), Unbounded)
cc 82729b046b4b5e04d96a5c441978097487126988f24e407519727dc78e77cbb3 # shrinks to mut tree = IntervalTree { root: Some(Node { key: (Included(-1318263670), Included(0)), value: Unbounded, left: None, right: Some(Node { key: (Included(0), Unbounded), value: Unbounded, left: None, right: None }) }) }, to_remove = (Included(0), Unbounded)
cc 60c31007b5768f211965cdd415db8a9ae428d842255912e931a5c0180042f29a # shrinks to mut tree = IntervalTree { root: Some(Node { key: (Unbounded, Included(0)), value: Included(0), left: None, right: None }) }, to_remove = (Included(-216959261), Included(-216959261)), other = (Excluded(0), Included(1))
cc 57e5a4d9048a89438b424d914bc4cd57329db1ec1f0f76ddb616fab604347ca2 # shrinks to mut tree = IntervalTree { root: Some(Node { key: (Included(0), Included(0)), value: Unbounded, left: Some(Node { key: (Unbounded, Included(10974591)), value: Unbounded, left: None, right: Some(Node { key: (Unbounded, Unbounded), value: Unbounded, left: None, right: None }) }), right: None }) }, to_remove = (Excluded(0), Included(0)), other = (Included(-1), Excluded(-1))
cc e8601cb19c2eb6b6450f61f12068f733220fa3f4bdd8ad926d878f86e64af357 # shrinks to mut tree = IntervalTree { root: Some(Node { key: (Included(0), Included(0)), value: Included(0), left: Some(Node { key: (Included(-1), Included(0)), value: Included(0), left: None, right: None }), right: None }) }, to_remove = (Included(-1), Included(1)), other = (Unbounded, Included(-2))
