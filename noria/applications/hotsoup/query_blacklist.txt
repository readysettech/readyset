######################
# SCHEMA v1

# "Paper" does not have a "contactId" field
68be356a_3b6f02bcac501f9e: SELECT paperId, title FROM Paper, ContactInfo  WHERE (Paper.contactId=ContactInfo.contactId AND  ContactInfo.email=?);
68be356a_dd4e396b6e183da7: SELECT Paper.paperId, Paper.title, Paper.abstract,  ContactInfo.firstName, ContactInfo.lastName,  ContactInfo.email, ContactInfo.affiliation, Paper.authorInformation  FROM Paper,ContactInfo  WHERE Paper.contactId=ContactInfo.contactId AND Paper.timeSubmitted>0  ORDER BY paperId ;
68be356a_3d894009ebe2e4b5: SELECT firstName, lastName, email,  paperId, outcome, title  FROM ContactInfo, Paper  WHERE Paper.outcome>0  AND Paper.contactId=ContactInfo.contactId  ORDER BY paperId ;

# "ReviewRequest" table does not exist
68be356a_19912ac4c5713b3f: SELECT  ContactInfo.firstName, ContactInfo.lastName, ContactInfo.email,  ContactInfo.contactId,  Paper.paperId, Paper.title  from ReviewRequest  join ContactInfo using (contactId)  join Paper using (paperId)  where ContactInfo.contactId=?;
68be356a_8c2996977694d11f: SELECT reviewRequestId, paperId FROM ReviewRequest WHERE paperId=? AND asked=?;
68be356a_fb002e97e8f23f5a: SELECT firstName, lastName, email  FROM ContactInfo join ReviewRequest using (contactId)  WHERE paperId=? and reviewType=?;
68be356a_4fd1ee69b7c34964: SELECT firstName, lastName, email  FROM ContactInfo, ReviewRequest  WHERE ReviewRequest.asked=ContactInfo.contactId  AND ReviewRequest.paperId=?;
68be356a_4dcd3dcda1f733ae: SELECT firstName, lastName, email  FROM ContactInfo join ReviewRequest using (contactId)  WHERE paperId=? and reviewType=?;
68be356a_f5ec10186351c281: SELECT firstName, lastName, email  FROM ContactInfo, ReviewRequest  WHERE ReviewRequest.asked=ContactInfo.contactId  AND ReviewRequest.paperId=?;

# "SecondaryReviewer" table does not exist
68be356a_b31086f24e23935f: SELECT firstName, lastName, email  FROM ContactInfo join SecondaryReviewer using (contactId)  WHERE SecondaryReviewer.paperId=?;
68be356a_f9435e7ef81d74d5: SELECT firstName, lastName, email  FROM ContactInfo join SecondaryReviewer using (contactId)  WHERE SecondaryReviewer.paperId=?;

# AVG() unsupported, alias used in ORDER BY and not correctly resolved
# TODO: we can fix this by (i) having an AVG operator, (ii) removing aliases outside the FROM clause
68be356a_c6b2cf3d8b88c900: SELECT Paper.paperId, Paper.title,  AVG(PaperReview.overAllMerit) as merit  FROM Paper  LEFT JOIN PaperReview  ON PaperReview.paperId=Paper.paperId  WHERE PaperReview.reviewSubmitted>0  GROUP BY PaperReview.paperId  ORDER BY merit DESC, Paper.paperId ;
68be356a_d82aecebfed87c3a: SELECT Paper.paperId, Paper.title,  AVG(PaperGrade.grade) as merit  FROM Paper  LEFT JOIN PaperGrade  ON PaperGrade.paperId=Paper.paperId  GROUP BY PaperGrade.paperId  ORDER BY merit DESC, Paper.paperId ;

# parameter in join condition
68be356a_32e74662fcdec376: SELECT TopicArea.topicId, TopicArea.topicName, TopicInterest.interest FROM TopicArea left join TopicInterest on (TopicInterest.contactId=? and TopicInterest.topicId=TopicArea.topicId);
68be356a_1ab06c9faa4ed0c4: SELECT TopicArea.topicId, TopicArea.topicName, TopicInterest.interest FROM TopicArea left join TopicInterest on (TopicInterest.contactId=? and TopicInterest.topicId=TopicArea.topicId);
68be356a_fd708786fcc78b0d: select TopicArea.topicId, TopicArea.topicName, TopicInterest.interest from TopicArea left join TopicInterest on TopicInterest.contactId=? and TopicInterest.topicId=TopicArea.topicId order by TopicArea.topicName;
68be356a_2209301630b94c80: select TopicArea.topicId, PaperTopic.paperId from TopicArea left join PaperTopic on PaperTopic.paperId=? and PaperTopic.topicId=TopicArea.topicId;
68be356a_9d93f2352449d3a9: select OptionType.optionId, PaperOption.paperId from OptionType left join PaperOption on PaperOption.paperId=? and PaperOption.optionId=OptionType.optionId;

######################
# SCHEMA v2

# No "reviewRequestId" field in "ReviewRequest"
c80751de_8c2996977694d11f: SELECT reviewRequestId, paperId FROM ReviewRequest WHERE paperId=? AND asked=?;

# "SecondaryReviewer" table does not exist
c80751de_ed3ede91c8770863: SELECT firstName, lastName, email  FROM ContactInfo join SecondaryReviewer using (contactId)  WHERE SecondaryReviewer.paperId=?;

# parameters in join condition
c80751de_4b49110aa7e70b39: select PC1.paperId, PC1.conflictType, PC2.conflictType from PaperConflict PC1 left join PaperConflict PC2 on (PC1.paperId=PC2.paperId and PC1.contactId=? and PC2.contactId=?) where PC1.contactId=?;

######################
# SCHEMA v3

# 5-column compound key required on first aggregation: 3x computed column => carry 2x over columns; 2x projected column; 1x filter column timeSubmitted
f5077848_d1247076f848ea67: select PaperReview.contactId, count(reviewSubmitted), count(reviewNeedsSubmit), group_concat(overAllMerit), PCMember.contactId as pc from PaperReview join Paper using (paperId) left join PCMember on (PaperReview.contactId=PCMember.contactId) where Paper.timeSubmitted>0 group by PaperReview.contactId;

######################
# SCHEMA v6

# parameter in join condition
6f0a41d1_38b76a6bfd9a9104: select ContactInfo.contactId, reviewType, commentId, conflictType, watch from ContactInfo left join PaperReview on (PaperReview.paperId=? and PaperReview.contactId=ContactInfo.contactId) left join PaperComment on (PaperComment.paperId=? and PaperComment.contactId=ContactInfo.contactId) left join PaperConflict on (PaperConflict.paperId=? and PaperConflict.contactId=ContactInfo.contactId) left join PaperWatch on (PaperWatch.paperId=? and PaperWatch.contactId=ContactInfo.contactId) where ContactInfo.contactId=?;

# count(paperId) only projects one column, and no group by bogocol is created, but can't group by agg col
6f0a41d1_929abaedd32ee211: select count(paperId) from PaperConflict where paperId=? and conflictType=?;

######################
# SCHEMA v8

# OR expression with query parameter
60008016_97bd27a08a3aa46a: select count(commentId) from PaperComment where paperId=? and (forReviewers>0 or contactId=?);

######################
# SCHEMA v15

# count(paperId) only projects one column, and no group by bogocol is created, but can't group by agg col
3491de61_af778910f8779b0d: select count(paperId) from PaperConflict where paperId=? and conflictType=?;

######################
# SCHEMA v19

# parameters in join condition
ddd10cab_56c36eb0fdd1ba07: select PaperReview.reviewId from PaperReview join PaperReview B on (PaperReview.paperId=B.paperId and PaperReview.contactId=? and B.contactId=?);

######################
# SCHEMA v21

# parameter in join condition
da577b40_b2c36acdac2c9363: select ContactInfo.contactId, reviewType, commentId, conflictType, watch from ContactInfo left join PaperReview on (PaperReview.paperId=? and PaperReview.contactId=ContactInfo.contactId) left join PaperComment on (PaperComment.paperId=? and PaperComment.contactId=ContactInfo.contactId) left join PaperConflict on (PaperConflict.paperId=? and PaperConflict.contactId=ContactInfo.contactId) left join PaperWatch on (PaperWatch.paperId=? and PaperWatch.contactId=ContactInfo.contactId) where ContactInfo.contactId=?;

# inequality on parameter unsupported
da577b40_99b7f6c7df7cf3d3: select count(paperId) from PaperConflict where paperId=? and conflictType>=?;

######################
# SCHEMA v22

# parameter in join condition
# XXX: why is the hash different to the identical query in v21?
5063baac_b08881033ef665a3: select ContactInfo.contactId, reviewType, commentId, conflictType, watch from ContactInfo left join PaperReview on (PaperReview.paperId=? and PaperReview.contactId=ContactInfo.contactId) left join PaperComment on (PaperComment.paperId=? and PaperComment.contactId=ContactInfo.contactId) left join PaperConflict on (PaperConflict.paperId=? and PaperConflict.contactId=ContactInfo.contactId) left join PaperWatch on (PaperWatch.paperId=? and PaperWatch.contactId=ContactInfo.contactId) where ContactInfo.contactId=?;

######################
# SCHEMA v23

# parameter in join condition
ea7df066_86becef9be87a6e3: select TopicArea.topicId, TopicArea.topicName, TopicInterest.interest from TopicArea left join TopicInterest on TopicInterest.contactId=? and TopicInterest.topicId=TopicArea.topicId order by TopicArea.topicName;

######################
# SCHEMA v24

# parameter in join condition
88eca8d4_2fed556b5887f07b: select TopicArea.topicId, TopicArea.topicName, TopicInterest.interest from TopicArea left join TopicInterest on TopicInterest.contactId=? and TopicInterest.topicId=TopicArea.topicId order by TopicArea.topicName;

######################
# SCHEMA v35

# parameter in join condition
# XXX: why is the hash different to the identical query in v21 and v27?
ff0cae2d_476a3599e7eccc5c: select ContactInfo.contactId, reviewType, commentId, conflictType, watch from ContactInfo left join PaperReview on (PaperReview.paperId=? and PaperReview.contactId=ContactInfo.contactId) left join PaperComment on (PaperComment.paperId=? and PaperComment.contactId=ContactInfo.contactId) left join PaperConflict on (PaperConflict.paperId=? and PaperConflict.contactId=ContactInfo.contactId) left join PaperWatch on (PaperWatch.paperId=? and PaperWatch.contactId=ContactInfo.contactId) where ContactInfo.contactId=?;

# cannot group by agg columns (star expansion bug)
ff0cae2d_71e181bd9892d0e5: select topicId, interest, count(*) from TopicInterest group by topicId, interest;

######################
# SCHEMA v37

# parameter in join clause
8dbbc83c_1dfdc69db02acb92: select count(ta.topicId), count(ti.topicId) from TopicArea ta left join TopicInterest ti on (ti.contactId=? and ti.topicId=ta.topicId);
8dbbc83c_9e0f1c5f2aca03e3: select count(ta.topicId), count(ti.topicId) from TopicArea ta left join TopicInterest ti on (ti.contactId=? and ti.topicId=ta.topicId);
8dbbc83c_34426d08700b212: select TopicArea.topicId, TopicArea.topicName, TopicInterest.interest from TopicArea left join TopicInterest on TopicInterest.contactId=? and TopicInterest.topicId=TopicArea.topicId order by TopicArea.topicName;

######################
# SCHEMA v41

# Table alias "s" not defined in query
8dbbc83c_dfab3072144fb8a6: select p.paperId, s.mimetype, s.paper as content, s.paperStorageId, s.compression from Paper p;

######################
# SCHEMA v46

# parameter in join clause
db62d1f2_3c64366889d7dda6: select count(ta.topicId), count(ti.topicId) from TopicArea ta left join TopicInterest ti on (ti.contactId=? and ti.topicId=ta.topicId);

######################
# SCHEMA v49

# parameter in join clause
385c9b24_7020f9d88308433f: select count(ta.topicId), count(ti.topicId) from TopicArea ta left join TopicInterest ti on (ti.contactId=? and ti.topicId=ta.topicId);
385c9b24_c45026bc22b0ed05: select TopicArea.topicId, TopicArea.topicName, TopicInterest.interest from TopicArea left join TopicInterest on TopicInterest.contactId=? and TopicInterest.topicId=TopicArea.topicId order by TopicArea.topicName;

######################
# SCHEMA v55

# Projecting a literal unsupported
ddf3f9aa_4d0ebc809119b9c8: select paperId, 0 from PaperConflict where conflictType!=0 and contactId=?;

######################
# SCHEMA v62

# Projecting a literal unsupported
# XXX: why is the hash different to the identical query in v55?
52ebdf90_8aae10f861bf3995: select paperId, 0 from PaperConflict where conflictType!=0 and contactId=?;

######################
# SCHEMA v67

# Projecting a literal unsupported
8579cf2a_3c16ee09fd8c3cd4: select paperId, 0 from PaperConflict where conflictType>0 and contactId=?;

######################
# SCHEMA v68

# Projecting a literal unsupported
# XXX: why is the hash different to the identical query in v67?
15fe1caa_8ebaa6807805d74f: select paperId, 0 from PaperConflict where conflictType>0 and contactId=?;

# parameter in join predicate
15fe1caa_bc4916bbed4f0031: select count(ta.topicId), count(ti.topicId) from TopicArea ta left join TopicInterest ti on (ti.contactId=? and ti.topicId=ta.topicId);
15fe1caa_11279a4c2e55c27e: select TopicArea.topicId, TopicArea.topicName, TopicInterest.interest from TopicArea left join TopicInterest on TopicInterest.contactId=? and TopicInterest.topicId=TopicArea.topicId order by TopicArea.topicName;

######################
# SCHEMA v75

# parameter in join predicate
b10814f6_266a1206304bf998: select PCMember.contactId, count(reviewId)                 from PCMember left join PaperReview on (PaperReview.contactId=PCMember.contactId and PaperReview.reviewType=?)                 group by PCMember.contactId;
b10814f6_e43a269b582f3dd4: select Paper.paperId, PaperConflict.conflictType,         reviewId, reviewType, reviewModified         from Paper         left join PaperReview on (Paper.paperId=PaperReview.paperId and PaperReview.contactId=?)         left join PaperConflict on (Paper.paperId=PaperConflict.paperId and PaperConflict.contactId=?)         where timeSubmitted>0         order by paperId asc, reviewId asc;
b10814f6_f5452732d051501d: select PaperReview.reviewId from PaperReview join PaperReview B on (PaperReview.paperId=B.paperId and PaperReview.contactId=? and B.contactId=?);
b10814f6_e2b64a7de6631aea: select count(ta.topicId), count(ti.topicId) from TopicArea ta left join TopicInterest ti on (ti.contactId=? and ti.topicId=ta.topicId);
b10814f6_e2b64a7de6631aea: select count(ta.topicId), count(ti.topicId) from TopicArea ta left join TopicInterest ti on (ti.contactId=? and ti.topicId=ta.topicId);

######################
# SCHEMA v76

# No column named "id" in "ContactInfo"
6078b8ff_9b0d846534e977c8: select email from ContactInfo where id=?;

# parameter in join predicate
6078b8ff_dbe9ac1619180725: select count(ta.topicId), count(ti.topicId) from TopicArea ta left join TopicInterest ti on (ti.contactId=? and ti.topicId=ta.topicId);

######################
# SCHEMA v77

# No column named "id" in "ContactInfo"
cb8ee5a2_905ff475a1c9cd4b: select email from ContactInfo where id=?;

# Projecting a literal unsupported
# XXX: why is the hash different to the identical query in v68?
cb8ee5a2_bdbff331e9335091: select paperId, 0 from PaperConflict where conflictType>0 and contactId=?;

######################
# SCHEMA v78

# Projecting a literal unsupported
# XXX: why is the hash different to the identical query in v77?
d12323a6_b87ff94d03c4aa02: select paperId, 0 from PaperConflict where conflictType>0 and contactId=?;

######################
# SCHEMA v80

# No column named "id" in "ContactInfo"
f6efba71_e54dc2994491482b: select email from ContactInfo where id=?;

######################
# SCHEMA v81

# No column named "id" in "ContactInfo"
f836fe9b_2a2cf1d31f05c73a: select email from ContactInfo where id=?;

# Literal projection
f836fe9b_20640d21b2045049: select ContactInfo.contactId,                 firstName, lastName, email, preferredEmail, password, roles, disabled,                 conflictType, 0 myReviewType                 from ContactInfo join PaperConflict using (contactId)                 where paperId=? and conflictType>=?;

# parameter in join predicate
f836fe9b_ecc066582241234e: select ContactInfo.contactId,                 firstName, lastName, email, preferredEmail, password, roles, disabled,                 conflictType, reviewType myReviewType                 from ContactInfo                 join PaperReview on (PaperReview.contactId=ContactInfo.contactId and PaperReview.paperId=?)                 left join PaperConflict on (PaperConflict.contactId=ContactInfo.contactId and PaperConflict.paperId=?)                 group by ContactInfo.contactId;

######################
# SCHEMA v82

# No column named "contactDbId" in "ContactInfo"
4c4b747b_802fc3c769413fef: select * from ContactInfo where contactDbId=?;

# No columns "siteclass" anywhere in the schema
4c4b747b_322eb2817248cdd8: select c.confid, siteclass, shortName, url         from Roles r join Conferences c on (c.confid=r.confid)         join ContactInfo u on (u.contactDbId=r.contactDbId)         where u.email=? order by r.updated_at desc;

# parameter in join predicate
4c4b747b_38579997490b5b06: select ContactInfo.contactId,                 firstName, lastName, email, preferredEmail, password, roles, disabled,                 conflictType, 0 myReviewType                 from ContactInfo join PaperConflict using (contactId)                 where paperId=? and conflictType>=?;
4c4b747b_3b82761a5e3de58a: select ContactInfo.contactId,                 firstName, lastName, email, preferredEmail, password, roles, disabled,                 conflictType, reviewType myReviewType                 from ContactInfo                 join PaperReview on (PaperReview.contactId=ContactInfo.contactId and PaperReview.paperId=?)                 left join PaperConflict on (PaperConflict.contactId=ContactInfo.contactId and PaperConflict.paperId=?)                 group by ContactInfo.contactId;

######################
# SCHEMA v86

# No column named "contactDbId" in "ContactInfo"
17cbae06_f68467e747692c24: select * from ContactInfo where contactDbId=?;

######################
# SCHEMA v92

# parameter in join predicate
e18037cb_18443945a1e533b2: select ContactInfo.contactId,                 firstName, lastName, email, preferredEmail, password,                 roles, disabled, contactTags,                 conflictType, 0 myReviewType                 from ContactInfo join PaperConflict using (contactId)                 where paperId=? and conflictType>=?;
e18037cb_68b28e16ed3edeba: select ContactInfo.contactId,                 firstName, lastName, email, preferredEmail, password,                 roles, disabled, contactTags,                 conflictType, reviewType myReviewType                 from ContactInfo                 join PaperReview on (PaperReview.contactId=ContactInfo.contactId and PaperReview.paperId=?)                 left join PaperConflict on (PaperConflict.contactId=ContactInfo.contactId and PaperConflict.paperId=?)                 group by ContactInfo.contactId;
e18037cb_460817bdfc4ef541: select count(ta.topicId), count(ti.topicId) from TopicArea ta left join TopicInterest ti on (ti.contactId=? and ti.topicId=ta.topicId);

# No column named "contactDbId" in "ContactInfo"
e18037cb_8ccde90904f2976: select *, password contactdb_password from ContactInfo where contactDbId=?;

######################
# SCHEMA v93

# No column named "contactDbId" in "ContactInfo"
e27af343_812afe9cd33eb6a2: select *, password contactdb_encoded_password from ContactInfo where contactDbId=?;

######################
# SCHEMA v94

# Parameter in join predicate
18ef8776_29bcc9d26797588a: select ContactInfo.contactDbId, Conferences.confid, roles             from ContactInfo             left join Conferences on (Conferences.`dbname`=?)             left join Roles on (Roles.contactDbId=ContactInfo.contactDbId and Roles.confid=Conferences.confid)             where email=?;

######################
# SCHEMA v97

# Parameter in join predicate
d14c4391_8d2513c85f47c7af: select ContactInfo.contactDbId, Conferences.confid, roles             from ContactInfo             left join Conferences on (Conferences.`dbname`=?)             left join Roles on (Roles.contactDbId=ContactInfo.contactDbId and Roles.confid=Conferences.confid)             where email=?;

# Literal projection
d14c4391_481148ab7dae0ae6: select *, 1 is_contactdb from ContactInfo where email=?;

# No column named "contactDbId" in "ContactInfo"
d14c4391_f82a8302dcdf3141: select *, 1 is_contactdb from ContactInfo where contactDbId=?;

######################
# SCHEMA v99

# Parameter in join predicate
d50d5846_4fe39a84147979ab: select ContactInfo.contactDbId, Conferences.confid, roles             from ContactInfo             left join Conferences on (Conferences.`dbname`=?)             left join Roles on (Roles.contactDbId=ContactInfo.contactDbId and Roles.confid=Conferences.confid)             where email=?;

######################
# SCHEMA v103

# Parameter in join predicate
aa2c2feb_caea94820c5adc33: select PaperReview.reviewId from PaperReview join PaperReview B on (PaperReview.paperId=B.paperId and PaperReview.contactId=? and B.contactId=?);

######################
# SCHEMA v114

# Parameter in join predicate
49149615_f84eca61f66cfbc9: select ContactInfo.contactId,                 firstName, lastName, email, preferredEmail, password,                 roles, disabled, contactTags,                 conflictType, 0 myReviewType                 from ContactInfo join PaperConflict using (contactId)                 where paperId=? and conflictType>=?;
49149615_d3f3e3ea6bcf8b3f: select ContactInfo.contactId,                 firstName, lastName, email, preferredEmail, password,                 roles, disabled, contactTags,                 conflictType, reviewType myReviewType                 from ContactInfo                 join PaperReview on (PaperReview.contactId=ContactInfo.contactId and PaperReview.paperId=?)                 left join PaperConflict on (PaperConflict.contactId=ContactInfo.contactId and PaperConflict.paperId=?)                 group by ContactInfo.contactId;

######################
# SCHEMA v124

# Literal projection
7055b205_9971ede8d89a37e9: select ContactInfo.contactId,                 firstName, lastName, email, preferredEmail, password, passwordIsCdb,                 roles, disabled, contactTags,                 conflictType, 0 myReviewType                 from ContactInfo join PaperConflict using (contactId)                 where paperId=? and conflictType>=?;

# Parameter in join predicate
7055b205_971d1130cb4099ca: select ContactInfo.contactId,                 firstName, lastName, email, preferredEmail, password, passwordIsCdb,                 roles, disabled, contactTags,                 conflictType, reviewType myReviewType                 from ContactInfo                 join PaperReview on (PaperReview.contactId=ContactInfo.contactId and PaperReview.paperId=?)                 left join PaperConflict on (PaperConflict.contactId=ContactInfo.contactId and PaperConflict.paperId=?)                 group by ContactInfo.contactId;

######################
# SCHEMA v130

# Parameter in join predicate
543e907b_f874259ccb56273d: select ContactInfo.contactDbId, Conferences.confid, roles, password             from ContactInfo             left join Conferences on (Conferences.`dbname`=?)             left join Roles on (Roles.contactDbId=ContactInfo.contactDbId and Roles.confid=Conferences.confid)             where email=?;

######################
# SCHEMA v140

# inequality joins unsupported
aad8bf44_ebdc6720f8ac816: select p.paperId from Paper p join PaperStorage ps on (ps.paperStorageId=p.paperStorageId) where p.finalPaperStorageId<=0 and (p.sha1!=ps.sha1 or p.size!=ps.size or p.mimetype!=ps.mimetype or p.timestamp!=ps.timestamp) limit 1;
aad8bf44_e37cac29e1a688ba: select p.paperId from Paper p join PaperStorage ps on (ps.paperStorageId=p.finalPaperStorageId) where p.finalPaperStorageId>0 and (p.sha1 != ps.sha1 or p.size!=ps.size or p.mimetype!=ps.mimetype or p.timestamp!=ps.timestamp) limit 1;

######################
# SCHEMA v141

# inequality joins unsupported
a3a15ec8_3b37fd321e005027: select p.paperId from Paper p join PaperStorage ps on (ps.paperStorageId=p.paperStorageId) where p.finalPaperStorageId<=0 and p.paperStorageId>1 and (p.sha1!=ps.sha1 or p.size!=ps.size or p.mimetype!=ps.mimetype or p.timestamp!=ps.timestamp) limit 1;
a3a15ec8_2b01a4a21964f6ab: select p.paperId from Paper p join PaperStorage ps on (ps.paperStorageId=p.finalPaperStorageId) where p.finalPaperStorageId>1 and (p.sha1 != ps.sha1 or p.size!=ps.size or p.mimetype!=ps.mimetype or p.timestamp!=ps.timestamp) limit 1;

######################
# SCHEMA v143

# inequality joins unsupported
1a90cd38_2196350e4e4adb37: select p.paperId from Paper p join PaperStorage ps on (ps.paperStorageId=p.paperStorageId) where p.finalPaperStorageId<=0 and p.paperStorageId>1 and (p.sha1!=ps.sha1 or p.size!=ps.size or p.mimetype!=ps.mimetype or p.timestamp!=ps.timestamp) limit 1;
1a90cd38_a4edeaf4dd579d80: select p.paperId from Paper p join PaperStorage ps on (ps.paperStorageId=p.finalPaperStorageId) where p.finalPaperStorageId>1 and (p.sha1 != ps.sha1 or p.size!=ps.size or p.mimetype!=ps.mimetype or p.timestamp!=ps.timestamp) limit 1;

######################
# SCHEMA v145

# inequality joins unsupported
b6fea998_3135e38d352ce574: select p.paperId from Paper p join PaperStorage ps on (ps.paperStorageId=p.paperStorageId) where p.finalPaperStorageId<=0 and p.paperStorageId>1 and (p.sha1!=ps.sha1 or p.size!=ps.size or p.mimetype!=ps.mimetype or p.timestamp!=ps.timestamp) limit 1;
b6fea998_6fd82a75e1f21c07: select p.paperId from Paper p join PaperStorage ps on (ps.paperStorageId=p.finalPaperStorageId) where p.finalPaperStorageId>1 and (p.sha1 != ps.sha1 or p.size!=ps.size or p.mimetype!=ps.mimetype or p.timestamp!=ps.timestamp) limit 1;

######################
# SCHEMA v146

# inequality joins unsupported
f5a359c3_1b814c10e954169a: select p.paperId from Paper p join PaperStorage ps on (ps.paperStorageId=p.paperStorageId) where p.finalPaperStorageId<=0 and p.paperStorageId>1 and (p.sha1!=ps.sha1 or p.size!=ps.size or p.mimetype!=ps.mimetype or p.timestamp!=ps.timestamp) limit 1;
f5a359c3_1e82ec7eb41ca3fc: select p.paperId from Paper p join PaperStorage ps on (ps.paperStorageId=p.finalPaperStorageId) where p.finalPaperStorageId>1 and (p.sha1 != ps.sha1 or p.size!=ps.size or p.mimetype!=ps.mimetype or p.timestamp!=ps.timestamp) limit 1;

######################
# SCHEMA v152

# inequality joins unsupported
e87490ac_d125d15374c964f4: select p.paperId from Paper p join PaperStorage ps on (ps.paperStorageId=p.paperStorageId) where p.finalPaperStorageId<=0 and p.paperStorageId>1 and (p.sha1!=ps.sha1 or p.size!=ps.size or p.mimetype!=ps.mimetype or p.timestamp!=ps.timestamp) limit 1;
e87490ac_8a2d4ac6caa4a88e: select p.paperId from Paper p join PaperStorage ps on (ps.paperStorageId=p.finalPaperStorageId) where p.finalPaperStorageId>1 and (p.sha1 != ps.sha1 or p.size!=ps.size or p.mimetype!=ps.mimetype or p.timestamp!=ps.timestamp) limit 1;

######################
# SCHEMA v161

# "Conferences" table does not exist in schema
a1ac837b_861fc461f61a0335: select confid from Conferences where `dbname`=?;

# No column "contactDbId" on "ContactInfo"
a1ac837b_8bc426139d40387d: select * from ContactInfo where contactDbId=?;

# Complex "ON" predicate unsupported, "Conferences" table unknown
a1ac837b_e617f8fab63f1a86: select ContactInfo.contactDbId, Conferences.confid, roles, password             from ContactInfo             left join Conferences on (Conferences.`dbname`=?)             left join Roles on (Roles.contactDbId=ContactInfo.contactDbId and Roles.confid=Conferences.confid)             where email=?;

# Unknown tables "ReviewFormField" and "ReviewFormOptions"
a1ac837b_bdc9619ab3be253d: select * from ReviewFormField where fieldName!='outcome';
a1ac837b_2c19c35e41b44e16: select * from ReviewFormOptions where fieldName!='outcome' order by level asc;
a1ac837b_60427ac36f75cc9c: select * from OptionType;
a1ac837b_48dc657a24ccccb2: select * from ContactAddress;
a1ac837b_8d679fcc66af4f50: select * from ReviewFormOptions where fieldName='outcome';

# inequality joins unsupported
a1ac837b_42bf1bb948ceda13: select p.paperId from Paper p join PaperStorage ps on (ps.paperStorageId=p.paperStorageId) where p.finalPaperStorageId<=0 and p.paperStorageId>1 and (p.sha1!=ps.sha1 or p.size!=ps.size or p.mimetype!=ps.mimetype or p.timestamp!=ps.timestamp) limit 1;
a1ac837b_65a899b93c7de67c: select p.paperId from Paper p join PaperStorage ps on (ps.paperStorageId=p.finalPaperStorageId) where p.finalPaperStorageId>1 and (p.sha1 != ps.sha1 or p.size!=ps.size or p.mimetype!=ps.mimetype or p.timestamp!=ps.timestamp) limit 1;
