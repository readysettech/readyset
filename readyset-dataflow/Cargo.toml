[package]
name = "readyset-dataflow"
version = "0.7.0"
publish = false
authors = ["ReadySet Technology, Inc. <info@readyset.io>"]
edition = "2021"

description = "ReadySet dataflow crate"

[dependencies]
anyhow = "1.0"
async-bincode = "0.6.1"
backoff = { version = "0.4.0", features = ["tokio"] }
bincode = "1.0.0"
bufstream = "0.1.3"
byteorder = "1.0.0"
hashbag = "0.1.2"
ahash = "0.7"
futures-util = "0.3.13"
lazy_static = "1.0.0"
itertools = "0.10"
metrics = { workspace = true }
nom-sql = { path = "../nom-sql" }
pin-project = "1.0"
indexmap = "1.9.2"
rand = "0.7"
regex = "1"
serde_derive = "1.0.8"
serde_with = "1.9.4"
serde_json = "1.0.2"
socket2 = "0.4"
tracing = { version = "0.1", features = ["release_max_level_debug"] }
tokio = { workspace = true, features = ["full"] }
tokio-stream = { version = "0.1.5", features = ["net"] }
vec_map = { version = "0.8.0", features = ["eders"] }
tempfile = "3.4"
derive_more = "0.99.11"
tuple = "0.5.1"
vec1 = "1.6.0"
derivative = "2.2.0"
criterion = { version = "0.3", features=['real_blackbox', 'async_tokio'], optional = true }
test-strategy = "0.2.0"
thiserror = "1.0.26"
proptest = "1.0.0"
fail = "0.5.0"
strum = "0.23"
strum_macros = "0.23"
notify = "4.0"
clap = { workspace = true, features = ["derive"] }

# need features
petgraph = { version = "0.5", features = ["serde-1"] }
serde = { version = "1.0.8", features = ["rc"] }
timekeeper = { version = "0.3.2", default-features = false }

# local deps
common = { path = "../readyset-common", package = "readyset-common" }
readyset-client = { path = "../readyset-client" }
merging-interval-tree = { path = "../merging-interval-tree" }
readyset-alloc = { path = "../readyset-alloc" }
readyset-util = { path = "../readyset-util" }
readyset-errors = { path = "../readyset-errors" }
readyset-data = { path = "../readyset-data" }
reader-map = { path = "../reader-map" }
partial-map = { path = "../partial-map" }
failpoint-macros = { path = "../failpoint-macros" }
dataflow-state = { path = "../dataflow-state" }
dataflow-expression = { path = "../dataflow-expression" }
replication-offset = { path = "../replication-offset" }

[features]
bench = ["criterion"]
failure_injection = ["fail/failpoints", "readyset-client/failure_injection"]
